T~NA_character_)
if(any(is.na(df$clinical))) warning('invalid patient code')
df
}
cella@contig_tbl %<>% add_clinical()
cella@cell_tbl %<>% add_clinical()
plotBoxplot <- function(df,value_col='Value'){
df$Value <- df[[value_col]]
ggplot(df,aes(clinical,Value,fill=clinical))+
geom_boxplot(outlier.alpha=0)+geom_jitter(width=0.05,height=0)
}
require(ggprism)
cols_clinical <- c('Lynch-like responder'='#D25B3F','Nonlynch-like responder'='#356870','Nonresponder'='#8D7233','Healthy'='#3C367E')
cols_clinical_dark <- colorspace::darken(cols_clinical,0.6) %>% set_names(c('Lynch-like responder','Nonlynch-like responder','Nonresponder','Healthy'))
# proportions of t cells
filter(dat,cluster_coarse!='Junk') %>% select(cluster_coarse,clinical) %>%
table() %>% as.data.frame.matrix() %>% rownames_to_column('cluster_coarse') %>%
mutate(across(-cluster_coarse,.fns=proportions)) %>%
filter(cluster_coarse=='CD8 Activated') %>%
pivot_longer(-cluster_coarse) %>%
ggplot(aes(reorder(name,value),value,fill=name))+geom_col()+theme_void()
# proportion of t cells split by fine type
filter(dat,cluster_coarse!='Junk') %>% select(cluster_fine,clinical) %>%
table() %>% as.data.frame.matrix() %>% rownames_to_column('clust') %>%
mutate(across(-clust,.fns=proportions)) %>%
filter(clust %in% c('CD8 Effector Memory','CD8 TEMRA')) %>%
pivot_longer(-clust) %>%
ggplot(aes(name,value,fill=factor(clust,c('CD8 TEMRA','CD8 Effector Memory'))))+geom_col(position='stack')+theme(legend.title=element_blank())
table(dat$cluster_coarse)
table(dat$cluster_coarse) %>% as.data.frame()
table(dat$cluster_coarse) %>% as.data.frame.matrix()
table(dat$cluster_coarse) %>% as.data.frame.array()
table(dat$cluster_coarse) %>% as.data.frame.integer()
table(dat$cluster_coarse) %>% matrix(nrow=1) %>% as.data.frame()
table(dat$cluster_coarse) %>% matrix(nrow=1)
table(dat$cluster_coarse) %>% matrix(nrow=1)
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame())
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
rename(paste0(.x$patient[1],'-',.x$timepoint[1])=Freq)) %>%
reduce(left_join,by='Var1')
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
rename(paste0(.x$patient[1],'-',.x$timepoint[1])=Freq))
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type')
proportions(c(1,4,NA))
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(.x)))# %>%
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0))))# %>%
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0)))) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint'))
plotBoxplot <- function(df,value_col='Value',patient_col='patient'){
if(!('clinical' %in% names(df))) dat <- add_clinical(dat,patient_col)
df$Value <- df[[value_col]]
ggplot(df,aes(clinical,Value,fill=clinical))+
geom_boxplot(outlier.alpha=0)+geom_jitter(width=0.05,height=0)
}
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0)))) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
plotBoxplot()
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0)))) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
plotBoxplot('prop')
plotBoxplot <- function(df,value_col='Value',patient_col='patient'){
if(!('clinical' %in% names(df))) dat <- add_clinical(dat,patient_col)
df$Value <- df[[value_col]]
ggplot(df,aes(clinical,Value,fill=clinical))+
geom_boxplot(outlier.alpha=0)+geom_jitter(width=0.05,height=0)
}
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0)))) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
plotBoxplot('prop')
plotBoxplot <- function(df,value_col='Value',patient_col1='patient'){
if(!('clinical' %in% names(df))) dat <- add_clinical(dat,patient_col1)
df$Value <- df[[value_col]]
ggplot(df,aes(clinical,Value,fill=clinical))+
geom_boxplot(outlier.alpha=0)+geom_jitter(width=0.05,height=0)
}
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0)))) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
plotBoxplot('prop')
# if(!('clinical' %in% names(df))) dat <- add_clinical(dat,patient_col1)
df$Value <- df[[value_col]]
plotBoxplot <- function(df,value_col='Value',patient_col1='patient'){
# if(!('clinical' %in% names(df))) dat <- add_clinical(dat,patient_col1)
df$Value <- df[[value_col]]
ggplot(df,aes(clinical,Value,fill=clinical))+
geom_boxplot(outlier.alpha=0)+geom_jitter(width=0.05,height=0)
}
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0)))) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
add_clinical() %>% plotBoxplot('prop')
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0)))) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
filter(type=='CD8 Activated') %>%
add_clinical() %>% plotBoxplot('prop')
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0)))) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
filter(type=='CD8 Activated') %>%
add_clinical() %>% plotBoxplot('prop')+ggrepel::geom_text_repel(aes(labels=interaction(patient,timepoint)),max.overlaps=100)
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0)))) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
filter(type=='CD8 Activated') %>%
add_clinical() %>% plotBoxplot('prop')+ggrepel::geom_text_repel(aes(label=interaction(patient,timepoint)),max.overlaps=100)
# proportions of t cells split by patient
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>%
mutate(across(-type,~proportions(replace_na(.x,0)))) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
filter(!(interaction(patient,timepoint) %in% c('20.5','23.1')),
type=='CD8 Activated') %>%
add_clinical() %>% plotBoxplot('prop')+ggrepel::geom_text_repel(aes(label=interaction(patient,timepoint)),max.overlaps=100)
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type')
h1 <- table(h1$patient,h1$patient) %>% as.vector()
# proportion of overall split by patient
h1 <- readRDS('data_sc/meta_ldat.rds')
h1 <- table(h1$patient,h1$patient) %>% as.vector()
h1
h1 <- table(h1$patient,h1$patient)
# proportion of overall split by patient
h1 <- readRDS('data_sc/meta_ldat.rds')
h1 <- table(h1$patient,h1$patient)
h1
# proportion of overall split by patient
h1 <- readRDS('data_sc/meta_ldat.rds')
table(h1$patient,h1$timepoint)
table(h1$patient,h1$timepoint) %>% as.data.frame()
table(h1$patient,h1$timepoint) %>% as.data.frame() %>% filter(Freq!=0)
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>% names()
table(h1$patient,h1$timepoint) %>% as.data.frame() %>% filter(Freq!=0) %>% transmute(temp=paste0(patient,'-',timepoint)) %>% .$temp
table(h1$patient,h1$timepoint) %>% as.data.frame() %>% filter(Freq!=0) %>% transmute(temp=paste0(Var1,'-',Var2)) %>% .$temp
table(h1$patient,h1$timepoint) %>% as.data.frame() %>% filter(Freq!=0) %>% arrange(as.character(Var1),Var2) %>% transmute(temp=paste0(Var1,'-',Var2)) %>% .$temp
group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type') %>% names()
table(h1$patient,h1$timepoint) %>% as.data.frame() %>% filter(Freq!=0) %>% arrange(as.character(Var1),Var2)
h2 <- group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type')
table(h1$patient,h1$timepoint) %>% as.data.frame() %>% filter(Freq!=0) %>% arrange(as.character(Var1),Var2)h2
h2
h2[,-1]
t(h2[,-1])
t(h2[,-1])/h1
h1
h1 <- table(h1$patient,h1$timepoint) %>% as.data.frame() %>%
filter(Freq!=0) %>% arrange(as.character(Var1),Var2) %>% .$Freq
h1
# proportion of overall split by patient
h1 <- readRDS('data_sc/meta_ldat.rds')
h1 <- table(h1$patient,h1$timepoint) %>% as.data.frame() %>%
filter(Freq!=0) %>% arrange(as.character(Var1),Var2) %>% .$Freq
h1
t(h2[,-1])/h1
t(t(h2[,-1])/h1)
t(t(h2[,-1])/h1) %>% as.data.frame()
t(t(h2[,-1])/h1) %>% as.data.frame() %>% mutate(type=h2$type)
t(t(h2[,-1])/h1) %>% as.data.frame() %>% mutate(type=h2$type) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
filter(!(interaction(patient,timepoint) %in% c('20.5','23.1')),
type=='CD8 Activated') %>%
add_clinical() %>% plotBoxplot('prop')+ggrepel::geom_text_repel(aes(label=interaction(patient,timepoint)),max.overlaps=100)
knitr::opts_chunk$set(echo=T)
library(magrittr)
library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep4 <- readRDS('data_misc/rep4.rds')
cella <- readRDS('data_misc/cella4.rds')
cl <- readRDS('data_misc/clinical.rds')
# dat <- readRDS('data_sc/meta_ldat.rds') %>%
dat <- readRDS('data_sc/meta_tc.rds') %>%
mutate(patient=case_when(
str_starts(orig.ident,'P')~str_extract(orig.ident,'(?<=PEM)\\d+'),
str_starts(orig.ident,'eric')~orig.ident,
orig.ident=='HD1'~'HA5876',orig.ident=='HD2'~'HA5877',
orig.ident=='HD3'~'HA5894',orig.ident=='HD4'~'HA5952',
orig.ident=='HD5'~'HA5953',orig.ident=='HD6'~'HA5957',
T~NA_character_))
add_clinical <- function(df,patient_col='patient'){
p1 <- df[[patient_col]]
df$clinical <- case_when(
p1=='healthy'~'Healthy',
p1 %in% c('14','25','5','2','6','23')~'Lynch-like responder',
p1 %in% c('18','19','22','20','12','11','13')~'Nonlynch-like responder',
p1 %in% c('1','3','7','8','9','10','15','16','17','21','24','26')~'Nonresponder',
stringr::str_starts(p1,'(HD)|(HA)|(eric)')~'Healthy',
T~NA_character_)
if(any(is.na(df$clinical))) warning('invalid patient code')
df
}
cella@contig_tbl %<>% add_clinical()
cella@cell_tbl %<>% add_clinical()
plotBoxplot <- function(df,value_col='Value',patient_col1='patient'){
# if(!('clinical' %in% names(df))) dat <- add_clinical(dat,patient_col1)
df$Value <- df[[value_col]]
ggplot(df,aes(clinical,Value,fill=clinical))+
geom_boxplot(outlier.alpha=0)+geom_jitter(width=0.05,height=0)
}
require(ggprism)
cols_clinical <- c('Lynch-like responder'='#D25B3F','Nonlynch-like responder'='#356870','Nonresponder'='#8D7233','Healthy'='#3C367E')
cols_clinical_dark <- colorspace::darken(cols_clinical,0.6) %>% set_names(c('Lynch-like responder','Nonlynch-like responder','Nonresponder','Healthy'))
h1 <- readRDS('data_sc/meta_ldat.rds')
h1 <- table(h1$patient,h1$timepoint) %>% as.data.frame() %>%
filter(Freq!=0) %>% arrange(as.character(Var1),Var2) %>% .$Freq
h2 <- group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type')
t(t(h2[,-1])/h1) %>% as.data.frame() %>% mutate(type=h2$type) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
filter(!(interaction(patient,timepoint) %in% c('20.5','23.1')),
type=='CD8 Activated') %>%
add_clinical() %>% plotBoxplot('prop')+ggrepel::geom_text_repel(aes(label=interaction(patient,timepoint)),max.overlaps=100)
h1 <- readRDS('data_sc/meta_ldat.rds')
h1 <- table(h1$patient,h1$timepoint) %>% as.data.frame() %>%
filter(Freq!=0) %>% arrange(as.character(Var1),Var2) %>% .$Freq
h2 <- group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type')
t(t(h2[,-1])/h1) %>% as.data.frame() %>% mutate(type=h2$type) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
filter(!(interaction(patient,timepoint) %in% c('20.5','23.1')),
type=='CD8 Activated') %>%
add_clinical() %>% plotBoxplot('prop')+ggrepel::geom_text_repel(aes(label=interaction(patient,timepoint)),max.overlaps=100)
rsthemes::use_theme_auto()
rsthemes::try_rsthemes()
h1 <- readRDS('data_sc/meta_ldat.rds')
h1 <- table(h1$patient,h1$timepoint) %>% as.data.frame() %>%
filter(Freq!=0) %>% arrange(as.character(Var1),Var2) %>% .$Freq
h2 <- group_split(dat,patient,timepoint) %>%
map(~table(.x$cluster_coarse) %>% as.data.frame() %>%
set_names('type',paste0(.x$patient[1],'-',.x$timepoint[1]))) %>%
reduce(left_join,by='type')
t(t(h2[,-1])/h1) %>% as.data.frame() %>% mutate(type=h2$type) %>%
pivot_longer(-type,values_to='prop') %>%
separate(name,c('patient','timepoint')) %>%
filter(!(interaction(patient,timepoint) %in% c('20.5','23.1')),
type=='CD8 Activated') %>%
add_clinical() %>% plotBoxplot('prop')+ggrepel::geom_text_repel(aes(label=interaction(patient,timepoint)),max.overlaps=100)
rsthemes::try_rsthemes()
dat
# change in diversity
h1 <- rep4$data[(!(names(rep4$data) %in% c('20-5','23-1')))&
(rep4$meta$timepoint %in% c(1,3,5))] %>%
repDiversity('inv.simp') %>% mutate(Value=log(Value)) %>%
separate(Sample,c('patient','timepoint')) %>%
pivot_wider(id_cols=patient,names_from=timepoint,values_from=Value)
# 1-3-5 line plot
na.omit(h1) %>% mutate(`3`=(`3`-`1`)/`1`,`5`=(`5`-`1`)/`1`,`1`=0) %>%
pivot_longer(-patient) %>% add_clinical() %>% ggplot(aes(name,value))+
geom_line(aes(group=patient,color=clinical))
# rainfall of div change
mutate(h1,`3-1`=(`3`-`1`)/`1`,`5-1`=(`5`-`1`)/`1`,`5-3`=(`5`-`3`)/`3`) %>%
add_clinical() %>%
ggplot(aes(reorder(patient,desc(`5-1`)),`5-1`,fill=clinical))+geom_col()+scale_fill_manual(values=cols_clinical)+theme_prism()+theme(axis.text.x=element_text(angle=90))+labs(y='Change in diversity')
# change in TM diversity
h1 <- rep4$data[(!(names(rep4$data) %in% c('20-5','23-1')))&
(rep4$meta$timepoint %in% c(1,3,5))]
h1 <- map_dbl(h1,~repDiversity(mutate(.x,Clones=expTil),'inv.simp') %>%
as.numeric()) %>%
data.frame('Value'=.,'Sample'=names(h1)) %>%
mutate(Value=log(Value)) %>% separate(Sample,c('patient','timepoint')) %>%
pivot_wider(id_cols=patient,names_from=timepoint,values_from=Value)
# 1-3-5 line plot
na.omit(h1) %>% mutate(`3`=(`3`-`1`)/`1`,`5`=(`5`-`1`)/`1`,`1`=0) %>%
pivot_longer(-patient) %>% add_clinical() %>% ggplot(aes(name,value))+
geom_line(aes(group=patient,color=clinical))
# rainfall of div change
mutate(h1,`3-1`=(`3`-`1`)/`1`,`5-1`=(`5`-`1`)/`1`,`5-3`=(`5`-`3`)/`3`) %>%
add_clinical() %>%
ggplot(aes(reorder(patient,desc(`5-1`)),`5-1`,fill=clinical))+geom_col()+scale_fill_manual(values=cols_clinical)+theme_prism()+theme(axis.text.x=element_text(angle=90))+labs(y='Change in diversity')
# clonality stuff
# overall pretreatment
rep4$data %>%
repDiversity(.method='inv.simp') %>%
mutate(patient=str_extract(Sample,'.*(?=-)'),
timepoint=str_extract(Sample,'.$')) %>%
add_clinical() %>% mutate(clinical=factor(clinical,c('Lynch-like responder','Nonlynch-like responder','Nonresponder','Healthy'))) %>%
filter(timepoint %in% c(1,'h')) %>%
ggplot(aes(clinical,Value,fill=clinical,color=clinical))+
geom_boxplot(lwd=1.5)+scale_y_log10()+
theme(axis.text.x=element_text(angle=30,hjust=1,vjust=1))+
theme_prism(axis_text_angle=45,base_size=12)+
scale_fill_manual(values=cols_clinical)+
scale_color_manual(values=cols_clinical_dark)+
ylab('Inverse simpson index')
library(magrittr)
# library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep4 <- readRDS('data_misc/rep4.rds')
rep4 <- readRDS('data_misc/rep4.rds')
getwd()
list.files('data_misc')
rep4
rep4 <- readRDS('data_misc/rep4.rds')
library(magrittr)
# library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep4 <- readRDS('data_misc/rep4.rds')
list.files('data_misc')
list.files('.')
list.files('')
getwd()
# setwd('C:/Users/spamt/OneDrive/Documents/program data/r projects/pem/')
library(magrittr)
# library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep4 <- readRDS('data_misc/rep4.rds')
setwd('C:/Users/spamt/OneDrive/Documents/program data/r projects/pem/')
library(magrittr)
# library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep4 <- readRDS('data_misc/rep4.rds')
getwd()
knitr::opts_knit$set(root.dir='C:/Users/spamt/OneDrive/Documents/program data/r projects/pem/')
library(magrittr)
# library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep4 <- readRDS('data_misc/rep4.rds')
getwd()
knitr::opts_knit$set(root.dir=normalizePath('C:/Users/spamt/OneDrive/Documents/program data/r projects/pem/'))
getwd()
### aggregated data (slides 15/16)
getwd()
```{r proportions of t cells}
filter(dat,cluster_coarse!='Junk') %>% select(cluster_coarse,clinical) %>%
table() %>% as.data.frame.matrix() %>% rownames_to_column('cluster_coarse') %>%
mutate(across(-cluster_coarse,.fns=proportions)) %>%
filter(cluster_coarse=='CD8 Activated') %>%
pivot_longer(-cluster_coarse) %>%
ggplot(aes(reorder(name,value),value,fill=name))+geom_col()+theme_void()
```
knitr::opts_knit$set(root.dir=normalizePath('C:/Users/spamt/OneDrive/Documents/program data/r projects/pem/'))
library(magrittr)
# library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep4 <- readRDS('data_misc/rep4.rds')
knitr::opts_knit$set(root.dir=normalizePath('C:/Users/spamt/OneDrive/Documents/program data/r projects/pem/'))
library(magrittr)
# library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep4 <- readRDS('data_misc/rep4.rds')
getwd()
# knitr::opts_knit$set(root.dir=normalizePath('C:/Users/spamt/OneDrive/Documents/program data/r projects/pem/'))
library(magrittr)
# library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep4$data %>%
repDiversity(.method='inv.simp') %>%
mutate(patient=str_extract(Sample,'.*(?=-)'),
timepoint=str_extract(Sample,'.$')) %>%
add_clinical() %>% mutate(clinical=factor(clinical,c('Lynch-like responder','Nonlynch-like responder','Nonresponder','Healthy'))) %>%
filter(timepoint %in% c(1,'h')) %>%
ggplot(aes(clinical,Value,fill=clinical,color=clinical))+
geom_boxplot(lwd=1.5)+scale_y_log10()+
theme(axis.text.x=element_text(angle=30,hjust=1,vjust=1))+
theme_prism(axis_text_angle=45,base_size=12)+
scale_fill_manual(values=cols_clinical)+
scale_color_manual(values=cols_clinical_dark)+
ylab('Inverse simpson index')
h1 <- readRDS('~/../../Downloads/aggregate_expression_SCT_tc2.rds')
dim(h1)
class(h1)
head(h1)
write.csv(h1,'~/../../Downloads/aggregate_expression_SCT_tc2.csv')
h1['CD3D',]
dat$cluster_fine %>% table()
names(h1)
colnames(h1)
colnames(h1) %>% unlist()
colnames(h1) %>% unname()
dat$cluster_fine %>% table() %>% names()
dat$cluster_fine %>% table()
h2 <- dat$cluster_fine %>% table()
h2
h1
h1/h2
t(h1)/h2
h2
dim(h2)
dim(h1)
t(h1)/h2
dim(t(h1))
h1/h2
t(h1)/h2
class(h1)
class(h32)
class(h2)
h2
as.numeric(h2)
h2 %<>% as.numeric()
h2
t(h1)/h2
t(t(h1)/h2)
t(t(h1)/h2) %>% head()
t(t(h1)/h2) %>% max()
h1 <- t(t(h1)/h2)
h1
write.csv(h1,'~/../../Downloads/aggregate_expression_SCT_tc2.csv')
h1['CD3D',]
h1['CD8A',]
h1['CD8B',]
h1['GZMK',]
h1['GZMH',]
h1['PRF1',]
h1['TOX',]
h1[c('HAVCR2','TOX','PDCD1','CTLA4','CD244','LAG3','TIGIT'),]
h1[c('HAVCR2','TOX','PDCD1','CTLA4','CD244','LAG3','TIGIT'),] %>% pheatmap::pheatmap()
h1[c('HAVCR2','TOX','PDCD1','CTLA4','CD244','LAG3','TIGIT'),] %>% pheatmap::pheatmap(scale='row')
h1[c('HAVCR2','TOX','PDCD1','CTLA4','CD244','LAG3','TIGIT'),] %>% pheatmap::pheatmap(scale='row')
h1[c('HAVCR2','TOX','PDCD1','CTLA4','CD244','LAG3','TIGIT'),-'CD8 Exhausted'] %>% pheatmap::pheatmap(scale='row')
h1[c('HAVCR2','TOX','PDCD1','CTLA4','CD244','LAG3','TIGIT'),-5] %>% pheatmap::pheatmap(scale='row')
h1[c('CD8A','CD8B','CD3D','CD3E','CD3G'),-5] %>% pheatmap::pheatmap(scale='row')
h1[c('CD8A','CD8B','CD3D','CD3E','CD3G'),] %>% pheatmap::pheatmap(scale='row')
h1[c('CD8A','CD8B'),] %>% pheatmap::pheatmap(scale='row')
h1[c('CD8A','CD8B','CD4'),] %>% pheatmap::pheatmap(scale='row')
h1[c('CD3D','CD3E','CD3G'),] %>% pheatmap::pheatmap(scale='row')
h1[c('CD3D','CD3E','CD3G'),-c(9,11)] %>% pheatmap::pheatmap(scale='row')
