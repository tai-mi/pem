str_extract(file,'.*(?=\\.csv)')),
timepoint=str_extract(file,'(?<=C)\\d')) %>%
rbind(tempData,.)
}
tempData
any(duplicated(tempData[,c('timepoint')]))
any(duplicated(tempData[,c('timepoint','umis')]))
any(duplicated(tempData[,c('timepoint','patient')]))
any(duplicated(tempData[,c('timepoint','patient','barcode')]))
any(duplicated(tempData[,c('timepoint','patient','contig_id')]))
any(duplicated(tempData[,c('timepoint','patient','contig_id','barcode')]))
any(duplicated(tempData[,c('timepoint','patient','contig_id','barcode','cdr3')]))
any(duplicated(tempData))
data.frame('a'=c(1,2),'b'=c(2,3))
data.frame('a'=c(1,2),'b'=c(2,3)) %>% duplicated()
tempData %>% filter(!is.na(timepoint))
duplicated((tempData %>% filter(!is.na(timepoint)))[,c('barcode','contig_id','patient','timepoint')]) %>% any()
dat <- ContigCellDB_10XVDJ(tempData,
contig_pk=c('barcode','contig_id','patient','timepoint'),
cell_pk=c('barcode','patient','timepoint'))
tempData[c(7337,7338,8799,8800,9440,9441),]
h1 <- tempData[c(7337,7338,8799,8800,9440,9441),]
tempData %>% filter(contig_id=='ACGAGCCTCCTAAGTG-1_contig_1')
sum(is.na(tempData$patient))
sum(is.na(tempData$timepoint))
sum(is.na(tempData$timepoint)&is.na(tempData$patient))
(is.na(tempData$timepoint)&is.na(tempData$patient))
(is.na(tempData$timepoint)&is.na(tempData$patient)) %>% which()
(is.na(tempData$timepoint)&is.na(tempData$patient)) %>% which() %>% range()
tempData[88824,]
fList
for(file in fList){
print(if_else(str_detect(file,'^PEM'),
str_extract(file,'(?<=^PEM)\\d+'),
str_extract(file,'.*(?=\\.csv)')))
}
for(file in fList){
print(if_else(str_detect(file,'^PEM'),
str_extract(file,'(?<=^PEM)\\d+'),
str_extract(file,'.*(?=\\.csv)')))
print(str_extract(file,'(?<=C)\\d''))
}
for(file in fList){
print(if_else(str_detect(file,'^PEM'),
str_extract(file,'(?<=^PEM)\\d+'),
str_extract(file,'.*(?=\\.csv)')))
print(str_extract(file,'(?<=C)\\d'')))
}
for(file in fList){
print(if_else(str_detect(file,'^PEM'),
str_extract(file,'(?<=^PEM)\\d+'),
str_extract(file,'.*(?=\\.csv)')))
print(str_extract(file,'(?<=C)\\d''))
}
for(file in fList){
print(if_else(str_detect(file,'^PEM'),
str_extract(file,'(?<=^PEM)\\d+'),
str_extract(file,'.*(?=\\.csv)')))
print(str_extract(file,'(?<=C)\\d'))
}
tempData <- map_dfr(fList,function(file){
df <- data.table::fread(paste0('data_tcr/',file)) %>%
select(-any_of('V1'))
df$patient <- if_else(str_detect(file,'^PEM'),
str_extract(file,'(?<=^PEM)\\d+'),
str_extract(file,'.*(?=\\.csv)'))
df$timepoint <- str_extract(file,'(?<=C)\\d')
df
})
?data.table::fread
tempData <- map_dfr(fList,function(file){
df <- data.table::fread(paste0('data_tcr/',file),
colClasses=c(productive='logical')) %>%
select(-any_of('V1'))
df$patient <- if_else(str_detect(file,'^PEM'),
str_extract(file,'(?<=^PEM)\\d+'),
str_extract(file,'.*(?=\\.csv)'))
df$timepoint <- str_extract(file,'(?<=C)\\d')
df
})
tempData <- data.frame()
for (file in fList) {
tempData <- data.table::fread(paste0('data_tcr/',file)) %>%
select(-any_of('V1')) %>%
mutate(patient=ifelse(str_detect(file,'^PEM'),
str_extract(file,'(?<=^PEM)\\d+'),
str_extract(file,'.*(?=\\.csv)')),
timepoint=str_extract(file,'(?<=C)\\d')) %>%
rbind(tempData,.)
}
sum(is.na(tempData$patient))
sum(is.na(tempData$timepoint))
dat <- ContigCellDB_10XVDJ(tempData,
contig_pk=c('barcode','contig_id','patient','timepoint'),
cell_pk=c('barcode','patient','timepoint'))
rm(dat)
any(duplicated(tempData[,c('contig_id','patient','timepoint')]))
any(duplicated(tempData[,c('patient','timepoint')]))
any(duplicated(tempData[,c('barcode','patient','timepoint')]))
dat <- ContigCellDB_10XVDJ(tempData,
contig_pk=c('contig_id','patient','timepoint'),
cell_pk=c('barcode','patient','timepoint'))
dat
object.size(dat)
dat %<>% mutate_cdb(productive=case_when(
toupper(as.character(productive))=='TRUE'~T,
toupper(as.character(productive))=='FALSE'~F,
toupper(as.character(productive))=='NONE'~NA,
))
cl <- readRDS('data_misc/clinical.rds')
clResponse <- set_names(cl$response,cl$sample)
clLynch <- set_names(cl$lynch,cl$sample)
cl
nrow(dat$contig_tbl)
print(paste(
ifelse(all(dat$contig_tbl$high_confidence),
'All high confidence,',
paste0(round(100*mean(dat@contig_tbl$high_confidence),2),'% of cells are high confidence,')),
ifelse(all(dat$contig_tbl$is_cell),
'all from a cell,',paste0(round(100*mean(dat@contig_tbl$is_cell),2),'% of contigs are from cells,')),
ifelse(all(dat$contig_tbl$full_length),
'all full length,',
paste0(round(100*mean(dat@contig_tbl$full_length),2),
'% of contigs are full length,')),'and',
ifelse(all(dat$contig_tbl$productive),'all productive',
paste0(round(100*sum(dat@contig_tbl$productive==T,na.rm=T)
/nrow(dat@contig_tbl),2),'% are productive'))
))
# ggplot(dat@contig_tbl)+geom_density(aes(length))
ggplot(dat@contig_tbl)+geom_density(aes(map_dbl(cdr3,nchar)))+
geom_vline(xintercept=8)
# slow w/ jitter (but is useful for those w/ low counts)
# ggplot(dat@contig_tbl,aes(x='reads',y=reads))+
#   geom_violin()+scale_y_log10()+#geom_jitter(alpha=0.05)+
#   facet_wrap(~patient+timepoint)
# ggplot(dat@contig_tbl,aes(x='reads',y=umis))+
#   geom_violin()+scale_y_log10()+#geom_jitter(alpha=0.05)+
#   facet_wrap(~patient+timepoint)
ggplot(dat@contig_tbl)+geom_bar(aes(x=interaction(patient,timepoint)))+
theme(axis.text.x.bottom=element_text(angle=90))
if_else(is.na(dat@contig_tbl$timepoint),1,dat@contig_tbl$timepoint)
if_else(is.na(dat@contig_tbl$timepoint),'1',dat@contig_tbl$timepoint)
# slow w/ jitter (but is useful for those w/ low counts)
# ggplot(dat@contig_tbl,aes(x='reads',y=reads))+
#   geom_violin()+scale_y_log10()+#geom_jitter(alpha=0.05)+
#   facet_wrap(~patient+timepoint)
# ggplot(dat@contig_tbl,aes(x='reads',y=umis))+
#   geom_violin()+scale_y_log10()+#geom_jitter(alpha=0.05)+
#   facet_wrap(~patient+timepoint)
ggplot(dat@contig_tbl)+
geom_bar(aes(x=interaction(patient,
if_else(is.na(dat@contig_tbl$timepoint),'1',dat@contig_tbl$timepoint))))+
theme(axis.text.x.bottom=element_text(angle=90))
guess_celltype(dat@contig_tbl$chain) %>% table()
# filter all cells, high_conf, not multichain (too many chains for one cell?), productive, full_length (?), and cdr3 > 7 aa's (also excludes Nones)
dat %<>% filter_cdb(is_cell,high_confidence,chain %in% c('TRA','TRB')
,productive,full_length)#,nchar(cdr3)>6)
nrow(dat$contig_tbl)
print(paste(
ifelse(all(dat$contig_tbl$high_confidence),
'All high confidence,',
paste0(round(100*mean(dat@contig_tbl$high_confidence),2),'% of cells are high confidence,')),
ifelse(all(dat$contig_tbl$is_cell),
'all from a cell,',paste0(round(100*mean(dat@contig_tbl$is_cell),2),'% of contigs are from cells,')),
ifelse(all(dat$contig_tbl$full_length),
'all full length,',
paste0(round(100*mean(dat@contig_tbl$full_length),2),
'% of contigs are full length,')),'and',
ifelse(all(dat$contig_tbl$productive),'all productive',
paste0(round(100*sum(dat@contig_tbl$productive==T,na.rm=T)
/nrow(dat@contig_tbl),2),'% are productive'))
))
# ggplot(dat@contig_tbl)+geom_density(aes(length))
ggplot(dat@contig_tbl)+geom_density(aes(map_dbl(cdr3,nchar)))+
geom_vline(xintercept=8)
# filter all cells, high_conf, not multichain (too many chains for one cell?), productive, full_length (?), and cdr3 > 7 aa's (also excludes Nones)
dat %<>% filter_cdb(is_cell,high_confidence,chain %in% c('TRA','TRB')
,productive,full_length,nchar(cdr3)>6)
# ggplot(dat@contig_tbl)+geom_density(aes(length))
ggplot(dat@contig_tbl)+geom_density(aes(map_dbl(cdr3,nchar)))+
geom_vline(xintercept=8)
# slow w/ jitter (but is useful for those w/ low counts)
# ggplot(dat@contig_tbl,aes(x='reads',y=reads))+
#   geom_violin()+scale_y_log10()+#geom_jitter(alpha=0.05)+
#   facet_wrap(~patient+timepoint)
# ggplot(dat@contig_tbl,aes(x='reads',y=umis))+
#   geom_violin()+scale_y_log10()+#geom_jitter(alpha=0.05)+
#   facet_wrap(~patient+timepoint)
ggplot(dat@contig_tbl)+
geom_bar(aes(x=interaction(patient,
if_else(is.na(dat@contig_tbl$timepoint),'1',dat@contig_tbl$timepoint))))+
theme(axis.text.x.bottom=element_text(angle=90))
guess_celltype(dat@contig_tbl$chain) %>% table()
require(vegan)
# create diversity dataframe
divData <- data.frame(group_by(dat@contig_tbl,patient,timepoint) %>%
group_keys(),
'contigs'=group_split(dat@contig_tbl,patient,timepoint) %>% map_dbl(nrow)) %>% mutate(lynch=clLynch[patient],response=clResponse[patient])
divData
# add shannon, invsimp and hill indices
divData$shannon <- dat@contig_tbl %>% group_split(patient,timepoint) %>%
map_dbl(~.x$cdr3 %>% table() %>% unlist() %>% diversity)
divData
divData$invSimp <- dat@contig_tbl %>% group_split(patient,timepoint) %>%
map_dbl(~.x$cdr3 %>% table() %>% unlist() %>% diversity(index='invsimpson'))
# response %in% c('CR','PR')
# response %in% c('SD','PD')
divData %>% filter(response %in% c('SD','PD')) %>%
ggplot()+geom_col(aes(x=patient,y=invSimp,fill=timepoint,group=interaction(patient,timepoint)),position='dodge')+theme(axis.text.x=element_text(angle=90))+scale_y_sqrt()+labs(title='Non-Responders')
# response %in% c('CR','PR')
# response %in% c('SD','PD')
divData %>% filter(response %in% c('CR','PR')) %>%
ggplot()+geom_col(aes(x=patient,y=invSimp,fill=timepoint,group=interaction(patient,timepoint)),position='dodge')+theme(axis.text.x=element_text(angle=90))+scale_y_sqrt()+labs(title='Responders')
divData
# response %in% c('CR','PR')
# response %in% c('SD','PD')
# divData %>% filter(response %in% c('CR','PR')) %>%
divData %>% filter(is.na(timepoint)) %>%
ggplot()+geom_col(aes(x=patient,y=invSimp),position='dodge')+theme(axis.text.x=element_text(angle=90))+scale_y_sqrt()+labs(title='Healthy')
divData$lynch
# response %in% c('CR','PR')
# response %in% c('SD','PD')
divData %>% filter(lynch) %>%
# divData %>% filter(is.na(timepoint)) %>% #uncomment and remove fill/group
ggplot()+geom_col(aes(x=patient,y=invSimp,fill=timepoint,group=interaction(patient,timepoint)),position='dodge')+theme(axis.text.x=element_text(angle=90))+scale_y_sqrt()+labs(title='Lynch')
# response %in% c('CR','PR')
# response %in% c('SD','PD')
divData %>% filter(!lynch) %>%
# divData %>% filter(is.na(timepoint)) %>% #uncomment and remove fill/group
ggplot()+geom_col(aes(x=patient,y=invSimp,fill=timepoint,group=interaction(patient,timepoint)),position='dodge')+theme(axis.text.x=element_text(angle=90))+scale_y_sqrt()+labs(title='Non-lynch')
hillNums <- c(2,4,8,16)
divData$hill <- dat@contig_tbl %>% group_split(patient,timepoint) %>%
map(~.x$cdr3 %>% table() %>% unlist() %>%
renyi(scales=hillNums,hill=T))
divData
# plot hill numbers
hillPlot <- divData$hill %>% as.data.frame() %>% t() %>%
set_colnames(paste0(hillNums)) %>%
as.data.frame() %>%
mutate(p=divData$patient,t=divData$timepoint) %>%
mutate(r=clResponse[as.character(p)],l=clLynch[as.character(p)]) %>%
pivot_longer(cols=paste0(hillNums)) %>%
mutate(name=factor(name,levels=paste0(hillNums)))
hillPlot %>% filter(r %in% c('SD','PD')) %>%
ggplot()+geom_line(aes(name,value,col=p,group=interaction(p,t),linetype=t))+facet_wrap(~p)+scale_linetype_manual(values=c('solid','longdash','dotdash'))+labs(x='hill numbers',title='Non-Responders')+scale_y_log10()
hillPlot
hillPlot %>% view()
hillPlot %>% filter(r %in% c('CR','PR')) %>%
ggplot()+geom_line(aes(name,value,col=p,group=interaction(p,t),linetype=t))+facet_wrap(~p)+scale_linetype_manual(values=c('solid','longdash','dotdash'))+labs(x='hill numbers',title='Responders')+scale_y_log10()
clLynch
hillPlot %>% filter(l) %>%
ggplot()+geom_line(aes(name,value,col=p,group=interaction(p,t),linetype=t))+facet_wrap(~p)+scale_linetype_manual(values=c('solid','longdash','dotdash'))+labs(x='hill numbers',title='Lynch')+scale_y_log10()
hillPlot %>% filter(!l) %>%
ggplot()+geom_line(aes(name,value,col=p,group=interaction(p,t),linetype=t))+facet_wrap(~p)+scale_linetype_manual(values=c('solid','longdash','dotdash'))+labs(x='hill numbers',title='Non-Lynch')+scale_y_log10()
hillPlot %>% filter(is.na(t)) %>%
ggplot()+geom_line(aes(name,value,col=p,group=interaction(p,t)))+labs(x='hill numbers',title='Healthy')+scale_y_log10()
hillPlot %>% filter(is.na(t))
hillPlot %>% filter(is.na(t)) %>%
ggplot()+geom_line(aes(name,value,col=p,group=interaction(p,t)))+facet_wrap(~p)+labs(x='hill numbers',title='Healthy')+scale_y_log10()
hillPlot %>% filter(is.na(t)) %>%
ggplot()+geom_line(aes(name,value,col=p,group=interaction(p,t),linetype=t))+labs(x='hill numbers',title='Healthy')+scale_y_log10()
hillPlot %>% filter(is.na(t)) %>%
ggplot()+geom_line(aes(name,value,col=p,group=interaction(p,t)))+labs(x='hill numbers',title='Healthy')+scale_y_log10()
hillPlot %>% filter(is.na(t)) %>%
ggplot()+geom_line(aes(name,value,col=p,group=p))+labs(x='hill numbers',title='Healthy')+scale_y_log10()
hillPlot %>% filter(is.na(t)) %>%
ggplot()+geom_line(aes(name,value,col=p,group=p,linetype=p))+labs(x='hill numbers',title='Healthy')+scale_y_log10()
# takes df (already filtered to one set to analyze)
toImmunarch <- function(df){
nTot <- nrow(df)
df <- add_count(df,cdr3)
df[!duplicated(df$cdr3),] %>% select(
Clones=n,
CDR3.nt=cdr3_nt,
CDR3.aa=cdr3,
V.name=v_gene,
D.name=d_gene,
J.name=j_gene,
patient,
timepoint
) %>% mutate(
V.end=NA,
D.start=NA,
D.end=NA,
J.start=NA,
VJ.ins=NA,
VD.ins=NA,
DJ.ins=NA,
Sequence=NA,.after=6) %>%
mutate(Proportion=Clones/nTot,.after=1) %>%
arrange(desc(Clones))
}
trackCl2 <- function(p,...){
require(immunarch)
if(!exists('rep1')) break
p <- as.character(p)
temp <- filter(dat@contig_tbl,patient==p) %>%
group_split(timepoint) %>%
map(~toImmunarch(.x))
temp %<>% set_names(filter(dat@contig_tbl,patient==p) %>%
group_by(timepoint) %>% group_keys() %>% unlist())
if(p %in% names(rep1$data)) temp$til <- rep1$data[[p]]
trackClonotypes(temp,...)
}
dat
saveRDS(dat,'data_misc/dat_healthy.rds')
library(magrittr)
library(tidyverse)
stuff <- "35105,32291,31213,27492,25060,22267,20052,18650,18456,17122,16507,12946,10796,10134,9133,8758,8704,8591,4967,4725,3524,3336,3247,2966,2965,1706,1639,1248,1228,814,523,319,275,173,162,118" %>%
str_split(',') %>% unlist() %>% as.numeric()
typeFine <- c('mono14','t','nk','t','t','t','t','t','b','t','t','mono16','t',
't','t','monoint','t','t','j','cdc1','mono','nk','nk','platelets',
't','platelets','pdc','b','plasma','j','mono','mono','dc','j','j',
'erythroid')
typeCoarse <- c('mono','t','nk','t','t','t','t','t','b','t','t','mono','t',
't','t','mono','t','t','j','dc','mono','nk','nk','j',
't','j','dc','b','b','j','mono','mono','dc','j','j',
'erythroid')
counts <- readRDS('data_sc/cell_source.rds') %>%
transmute(pem=p,healthy=h+s) %>%
mutate(type2=typeCoarse)
counts %>% pivot_longer(cols=c(pem,healthy)) %>%
filter(!(type2 %in% c('j','erythroid'))) %>%
group_by(type2,name) %>% summarise(n=sum(value)) %>%
group_by(name) %>% summarise(n=n/sum(n),type2=type2) %>%
ggplot()+geom_col(aes(x=1,y=n,fill=type2))+
coord_polar('y',start=0)+
facet_wrap(vars(name))
# load patient level data
counts <- readRDS('data_sc/cell_orig.rds')
nm <- names(counts) %>% str_extract('(?<=^PEM)\\d+') %>% as.numeric() %>%
tibble(patient=.)
cl <- readRDS('data_misc/clinical.rds')
nm <- left_join(nm,cl,by=c('patient'='sample'))
# patient 24 doesn't have clinical data?
drop24 <- which(!is.na(nm$response))
nm <- nm[drop24,]
counts <- counts[,drop24]
piePlot <- function(df){
df <- tibble(value=rowSums(df),type2=typeCoarse) %>%
group_by(type2) %>% summarize(value=sum(value)) %>%
filter(!(type2 %in% c('j','erythroid')))
ggplot(df)+geom_col(aes(x=1,y=value,fill=type2))+
coord_polar('y',start=0)
}
piePlot(counts[nm$lynch])
piePlot(counts[!nm$lynch])
piePlot(counts[nm$response %in% c('CR','PR')])
piePlot(counts[nm$response %in% c('PD','SD')])
piePlot(counts[nm$response=='CR'])
piePlot(counts[nm$response=='PR'])
piePlot(counts[nm$response=='SD'])
piePlot(counts[nm$response=='PD'])
library(magrittr)
library(tidyverse)
allMark <- readRDS('data_sc/small_allmark.rds')
topMark <- map(group_split(allMark,cluster),~arrange(.x,desc(avg_log2FC)) %>%
.[1:10,]) %>%
set_names(group_by(allMark,cluster) %>% group_keys() %>% unlist()) %>%
map_dfr(~.x)
source('panglao.r')
panglao2 <- function(clust){
allMark %>% filter(cluster==clust) %>% arrange(desc(avg_log2FC)) %>%
.$gene %>% .[1:6] %>%
panglaoMain()
}
source('../rig-i/panglao.r')
panglao2 <- function(clust){
allMark %>% filter(cluster==clust) %>% arrange(desc(avg_log2FC)) %>%
.$gene %>% .[1:6] %>%
panglaoMain()
}
list.files('data_sc/mark_small/')
list.files('data_sc/mark_small/',full.names=T)
mark <- map(list.files('data_sc/mark_small/',full.names=T), function(p){
readRDS(p)
})
# mark %<>% set_names(paste0('c', list.files('data_sc/mark/') %>%
# str_extract('\\d+')))
mark %<>% set_names(paste0('c', list.files('data_sc/marktc/') %>%
str_extract('(?<=mark_)\\d+')))
paste0('c', list.files('data_sc/marktc/') %>%
str_extract('(?<=mark_)\\d+'))
list.files('data_sc/marktc/') %>%
str_extract('(?<=mark_)\\d+')
list.files('data_sc/mark_small/')
list.files('data_sc/marktc/') %>%
str_extract('(?<=^mark_)\\d+')
list.files('data_sc/mark_small/') %>%
str_extract('(?<=^mark_)\\d+')
# mark %<>% set_names(paste0('c', list.files('data_sc/mark/') %>%
# str_extract('\\d+')))
mark %<>% set_names(paste0('c', list.files('data_sc/mark_small/') %>%
str_extract('(?<=mark_)\\d+')))
mark
dev <- function(gene){
gene %<>% toupper()
x <- map(mark,~.x[gene,'avg_log2FC']) %>%
unlist()
x <- ifelse(is.na(x),0,x)
x <- as_tibble(x,rownames='cluster')
y <- mutate(x,c2=str_extract(cluster,'\\d+') %>% as.numeric()) %>%
# mutate(cluster=str_extract(value,'\\d+') %>% as.numeric) %>%
ggplot()+geom_col(aes(reorder(cluster,c2),value,fill=cluster))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
ylim(c(min(c(-0.5,x$value)),max(c(0.5,x$value))))+
geom_hline(yintercept=0)
y
}
dev('CD3D')
dev('CD3E')
dev('CD3G')
dev('CD8A')
dev('CD8B')
dev('CD4')
dev('FOXP3')
dev('TRGC')
dev('TRDC')
dev('TRAC')
dev('TRBC')
dev('TBX21')
dev('IL2')
dev('IL12')
dev('IL11')
dev('IL21')
dev('IL22')
dev('IL25')
scaled <- readRDS('data_sc/small_scaled_rna.rds')
dim(scaled)
head(rownames(scaled))
names(scaled)
scaled[1:10,1:10]
t(scaled)
h1 <- t(scaled) %>% as.data.frame()
head(rownames(h1))
head(naes(h1))
head(names(h1))
scaled <- readRDS('data_sc/small_scaled_rna.rds') %>%
t() %>% as.data.frame()
rm(h1)
ggplot(scaled)+geom_boxplot(aes('ACE2'))
ggplot(scaled)+geom_boxplot(aes(y='ACE2'))
ggplot(scaled)+geom_boxplot(aes(y=ACE2))
rownames(scaled)
dev2 <- function(genes){
genes <- toupper(genes)
if(length(genes)==1){
tibbble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[[genes]]) %>%
arrange(cluster) %>%
ggplot()+geom_col(aes(cluster,expression,fill=cluster))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
# ylim(c(min(c(-0.5,x$value)),max(c(0.5,x$value))))+
geom_hline(yintercept=0)+
labs(title=genes)
}
}
dev2('ACE2')
dev2 <- function(genes){
genes <- toupper(genes)
if(length(genes)==1){
tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[[genes]]) %>%
arrange(cluster) %>%
ggplot()+geom_col(aes(cluster,expression,fill=cluster))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
# ylim(c(min(c(-0.5,x$value)),max(c(0.5,x$value))))+
geom_hline(yintercept=0)+
labs(title=genes)
}
}
dev2('ACE2')
dev2 <- function(genes){
genes <- toupper(genes)
if(length(genes)==1){
tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[[genes]]) %>%
arrange(cluster) %>%
ggplot()+geom_col(aes(cluster,expression,fill=as.factor(cluster)))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
# ylim(c(min(c(-0.5,x$value)),max(c(0.5,x$value))))+
geom_hline(yintercept=0)+
labs(title=genes)
}
}
dev2('ACE2')
dev2('ACE2')
dev2 <- function(genes){
genes <- toupper(genes)
if(length(genes)==1){
tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[[genes]]) %>%
mutate(expression=expression-sum(range(expression))/2) %>%
arrange(cluster) %>%
ggplot()+geom_col(aes(cluster,expression,fill=as.factor(cluster)))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
# ylim(c(min(c(-0.5,x$value)),max(c(0.5,x$value))))+
geom_hline(yintercept=0)+
labs(title=genes)
}
}
dev2('ACE2')
dev2('IL21')
dev2('IL22')
dev2('IL25')
dev2('tbx21')
dev2('cxcr3')
dev2('ccr7')
dev2('siglecf')
dev2('gzma')
dev2('ncam1')
dev2('klrd1')
