readRDS(p2)
})
# mark %<>% set_names(paste0('c', list.files('data_sc/mark/') %>%
# str_extract('\\d+')))
mark %<>% set_names(paste0('c', list.files('data_sc/mark_tc/') %>%
str_extract('(?<=mark_)\\d+')))
allMark <- readRDS('data_sc/tc_allmark.rds')
topMark <- map(group_split(allMark,cluster),~arrange(.x,desc(avg_log2FC)) %>% .[1,]) %>%
set_names(group_by(allMark,cluster) %>% group_keys() %>% unlist()) %>%
map_dfr(~.x)
source('../rig-i/panglao.r')
panglao2 <- function(clust){
allMark %>% filter(cluster==clust) %>% arrange(desc(avg_log2FC)) %>%
.$gene %>% .[1:10] %>%
panglaoMain()
}
scaled <- readRDS('data_sc/tc_scaled.rds') %>%
t() %>% as.data.frame()
dev2 <- function(genes,center=0){
genes <- toupper(genes)
if(length(genes)==1){
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[[genes]])
} else{
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[,genes] %>% rowSums())
}
x %>% mutate(expression=expression-sum(range(expression))/2-center) %>%
arrange(cluster) %>%
ggplot()+geom_col(aes(cluster,expression,fill=as.factor(cluster)))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
scale_x_continuous(breaks=0:40)+
geom_hline(yintercept=0)+
labs(title=genes)
}
# naive: SELL, CCR7; TCF7, TIM3?; CD44-, CD69- (earlier than 44)
dev2('il7r')
dev('il7r')
dev2('il7r')
dev('il7r')
scaled['IL7R',]
scaled[,'IL7R']
colnames(scaled) %>% head()
head(rownames(scaled))
paste(rownames(scaled),scaled[,'IL7R'])
id1
id1$genes[1]
id1$genes[[1]]
id1[id1$cluster==10,'genes']
id1[id1$cluster==10,'genes'] %>% unlist()
id1[id1$cluster==10,'genes'] %>% unlist() %>% append(c('a','b'))
id1 <- readxl::read_xlsx('data_markers/tc_eric.xlsx','Sheet1') %>%
mutate(genes=str_split(genes,',') %>% toupper())
id1
addGene <- function(genes,clusts){
genes %<>% toupper()
if(length(genes)==1){
for(i in 1:nrow(id1)){
if(id1$cluster[i] %in% clusts){
id1$genes[i] <- c(id1$genes[[i]],genes)
}
}
} else if(length(clusts)==1){
id1[id1$cluster==clusts,'genes'] <- id1[id1$cluster==clusts,'genes'] %>%
unlist() %>% append(genes)
}
id1
}
addGene('il7r',c(27,25))
id1$genes[1]
id1$genes[5]
id1$genes[2]
id1$genes[3]
id1$genes[4]
id1$genes[6]
id1$genes[6] %>% class()
id1 <- readxl::read_xlsx('data_markers/tc_eric.xlsx','Sheet1')
id1 <- readxl::read_xlsx('data_markers/tc_eric.xlsx','Sheet1') %>%
mutate(genes=toupper(genes))
id
id1
id1 <- readxl::read_xlsx('data_markers/tc_eric.xlsx','Sheet1') %>%
mutate(genes=toupper(genes),type=str_replace_all(type,'ï','i'))
id1
addGene('il7r',c(25,27))
addGene <- function(genes,clusts){
genes %<>% toupper()
if(length(genes)==1){
for(i in 1:nrow(id1)){
if(id1$cluster[i] %in% clusts){
id1$genes[i] <- paste0(id1$genes[i],',',genes)
}
}
} else if(length(clusts)==1){
id1$genes[id1$cluster==clusts] <- id1[id1$cluster==clusts,'genes'] %>%
unlist() %>% append(genes)
}
id1
}
addGene('il7r',c(25,27))
id1 <- addGene('il7r',c(25,27))
id1[,c(25,27)]
id1[c(25,27),]
id1[c(26,28),]
id1 <- readxl::read_xlsx('data_markers/tc_eric.xlsx','Sheet1') %>%
mutate(genes=toupper(genes) %>% replace_na(''),
type=str_replace_all(type,'ï','i'))
id1
id1$genes[1]
dev2('sca1')
dev2('ly6a')
dev2('atxn1')
dev2('il2rb')
dev2('tim3')
dev2('havcr2')
dev2('havcr2',-0.4)
dev2(c('havcr2','lag3','tigit'),-0.4)
dev2(c('havcr2','lag3','tigit','pd1'),-0.4)
dev2(c('tox'),-0.4)
dev2(c('havcr2','lag3','tigit','tox'),-0.4)
dev2(c('havcr2','lag3','tigit','tox'),-1)
dev2(c('havcr2','lag3','tigit','tox'),-2)
dev2(c('tox'),-0.4)
dev2(c('cxcr3'),)
dev2(c('cxcr3'),-0.5)
head(rownames(scaled))
dev2 <- function(genes,center=0,drop1){
genes <- toupper(genes)
if(length(genes)==1){
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[[genes]])
} else{
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[,genes] %>% rowSums())
}
x$expression[x$cluster %in% as.character(drop1)] <- NA
x %>% mutate(expression=expression-sum(range(expression))/2-center) %>%
arrange(cluster) %>%
ggplot()+geom_col(aes(cluster,expression,fill=as.factor(cluster)))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
scale_x_continuous(breaks=0:40)+
geom_hline(yintercept=0)+
labs(title=genes)
}
dev2(c('cxcr3'),-0.5)
dev2 <- function(genes,center=0,drop1=NULL){
genes <- toupper(genes)
if(length(genes)==1){
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[[genes]])
} else{
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[,genes] %>% rowSums())
}
x$expression[x$cluster %in% as.character(drop1)] <- NA
x %>% mutate(expression=expression-sum(range(expression))/2-center) %>%
arrange(cluster) %>%
ggplot()+geom_col(aes(cluster,expression,fill=as.factor(cluster)))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
scale_x_continuous(breaks=0:40)+
geom_hline(yintercept=0)+
labs(title=genes)
}
dev2(c('cxcr3'),-0.5)
dev2(c('cxcr3'),-0.5,26)
dev2(c('cxcr3'),-0.5,'26')
dev2 <- function(genes,center=0,drop1=NULL){
genes <- toupper(genes)
if(length(genes)==1){
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[[genes]])
} else{
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[,genes] %>% rowSums())
}
x$expression[x$cluster %in% as.character(drop1)] <- 0
x %>% mutate(expression=expression-sum(range(expression))/2-center) %>%
arrange(cluster) %>%
ggplot()+geom_col(aes(cluster,expression,fill=as.factor(cluster)))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
scale_x_continuous(breaks=0:40)+
geom_hline(yintercept=0)+
labs(title=genes)
}
dev2(c('cxcr3'),-0.5,'26')
dev2 <- function(genes,center=0,drop1=NULL){
genes <- toupper(genes)
if(length(genes)==1){
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[[genes]])
} else{
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[,genes] %>% rowSums())
}
x$expression[x$cluster %in% as.character(drop1)] <- 'a'
x %>% mutate(expression=expression-sum(range(expression))/2-center) %>%
arrange(cluster) %>%
ggplot()+geom_col(aes(cluster,expression,fill=as.factor(cluster)))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
scale_x_continuous(breaks=0:40)+
geom_hline(yintercept=0)+
labs(title=genes)
}
dev2(c('cxcr3'),-0.5,'26')
dev2 <- function(genes,center=0,drop1=NULL){
genes <- toupper(genes)
if(length(genes)==1){
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[[genes]])
} else{
x <- tibble('cluster'=as.numeric(rownames(scaled)),
expression=scaled[,genes] %>% rowSums())
}
x$expression[x$cluster %in% as.character(drop1)] <- NA
x %>% mutate(expression=expression-sum(range(expression,na.rm=T))/2-center) %>%
arrange(cluster) %>%
ggplot()+geom_col(aes(cluster,expression,fill=as.factor(cluster)))+
theme(axis.text.x=element_text(angle=90,),legend.position='none')+
scale_x_continuous(breaks=0:40)+
geom_hline(yintercept=0)+
labs(title=genes)
}
dev2(c('cxcr3'),-0.5,'26')
dev2(c('cxcr3'),-0.2,'26')
dev2(c('cxcr3'),-0.2,c('26','14'))
dev2(c('cxcr3'),-0.1,c('26','14'))
dev2(c('cxcr3'),0,c('26','14'))
dev2(c('cd27'),0,c('26','14'))
dev2(c('cd27'),0,c('26','14','27'))
dev2(c('sell'),0,c('26','14','27'))
dev2(c('il2rb'),0,c('26','14','27'))
dev2(c('il2rb','cd95'),0,c('26','14','27'))
dev2(c('il2rb','fas','cxcr3','cd27','itgal','cd58'),0,c('26','14','27'))
dev2(c('fas','itgal','cd58'),0,c('26','14','27'))
dev2(c('cd58'),0,c('26','14','27'))
dev2(c('fas'),0,c('26','14','27'))
dev2(c('itgal'),0,c('26','14','27'))
dev2(c('TRAC1'),0,c('26','14','27'))
dev2(c('TRAC'),0,c('26','14','27'))
dev2(c('TRAC','trbc'),0,c('26','14','27'))
dev2(c('TRAC','trbc1'),0,c('26','14','27'))
dev2(c('TRAC','trbc1','trbc2'),0,c('26','14','27'))
dev2(c('TRAC','trbc1','trbc2','trbc3'),0,c('26','14','27'))
dev2(c('TRAC','trbc1','trbc2'),0,c('26','14','27'))
dev2(c('TRAC','trbc1','trbc2'),-1,c('26','14','27'))
dev2(c('trgc','trdc'),0,c('26','14','27'))
dev2(c('trgc','trdc1'),0,c('26','14','27'))
dev2(c('trgc'),0,c('26','14','27'))
dev2(c('trgc1','trdc'),0,c('26','14','27'))
dev2(c('trgc1','trdc'),0,c())
dev2(c('trgc1','trdc'),0,c('26','14','27'))
source('~/Program Data/R projects/pem/markers_tc.r', encoding = 'UTF-8')
dev2(c('rpl13'),0,c(27,26,14))
dev2(c('rpl13'),0,)
dev2(c('rpl13'),0,c(27))
dev2(c('rpl13'),0,c(27,14))
dev2(c('gapdh'),0,c(27,14))
dev2(c('gapdh'),0,c())
dev2(c('gapdh'),0,c(26))
dev2(c('gapdh','sdha','hprt1','hbs1l','ahsp','b2m'),0,c(26))
dev2(c('gapdh','sdha','hprt1','hbs1l','ahsp','b2m'),0,c())
dev2(c('gapdh','sdha','hprt1','hbs1l','ahsp','b2m'),0,c(26))
dev2(c('gapdh','sdha','hprt1','hbs1l','ahsp','b2m'),0,c(26,27,18))
dev2(c('il2rb'),0,c(26,27,18))
dev2(c('cd58'),0,c(26,27,18))
dev2(c('cd58'),0,c(26,27,18,14))
install.packages('DoubletFinder')
pacman::p_load_gh('scfurl/m3addon')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rep <- readRDS('data_misc/rep2_healthy.rds')
rep
dat <- readRDS('data_misc/dat_healthy.rds')
dat
geneUsage(rep,.gene='hs.trav',.quant='count',.ambig='wei',.norm=T)
rep
geneUsage(rep$data,.gene='hs.trav',.quant='count',.ambig='wei',.norm=T)
gene_stats()
geneUsage(rep$data,.gene='hs.trav',.quant='count',.ambig='wei',.norm=T)
geneUsage(rep$data,.gene='hs.trbv',.quant='count',.ambig='wei',.norm=T)
?geneUsage
geneUsage(rep$data[[1]],.gene='hs.trbv',.quant='count',.ambig='wei',.norm=T)
geneUsage(rep$data,.gene='hs.trbv')
h1 <- geneUsage(rep$data,.gene='hs.trbv')
view(h1)
geneUsage(rep$data,.gene='hs.trbv',.quant='count',.ambig='exc',.norm=T)
geneUsage(rep$data,.gene='hs.trbv',.quant='count',.ambig='exc',.norm=T) %>% view()
geneUsage(rep$data,.gene='hs.trbv',.quant='count',.ambig='exc',.norm=T) %>%
vis()
rep$meta %>% names()
rep$meta
geneUsage(rep$data,.gene='hs.trbv',.quant='count',.ambig='exc',.norm=T) %>%
vis(.meta=rep$meta,.by='lynch')
geneUsage(rep$data,.gene='hs.trbv',.quant='count',.ambig='exc',.norm=T) %>%
vis(.meta=rep$meta,.by='timepoint')
?vis
geneUsage(rep$data,.gene='hs.trbv',.quant='count',.ambig='exc',.norm=T) %>%
vis(.by=rep$meta$timepoint)
rep$meta$timepoint
geneUsageAnalysis(rep$data,.method='tsne+kmeans',.k=5)
geneUsageAnalysis(rep$data,.method='tsne')
trbv <- geneUsage(rep$data,.gene='hs.trbv',.quant='count',.ambig='exc',.norm=T)
trav <- geneUsage(rep$data,.gene='hs.trav',.quant='count',.ambig='exc',.norm=T)
geneUsageAnalysis(trbv,.method='tsne')
geneUsageAnalysis(trbv,.method='tsne') %>% vis()
geneUsageAnalysis(trbv,.method='pca') %>% vis()
geneUsageAnalysis(trbv,.method='pca+hclust') %>% vis()
geneUsageAnalysis(trbv,.method='mds+dbscan') %>% vis()
geneUsageAnalysis(trbv,.method='mds+dbscan')
geneUsageAnalysis(trbv,.method='mds+dbscan')$data
geneUsageAnalysis(trbv,.method='mds+dbscan')$data %>% class()
ggplot(geneUsageAnalysis(trbv,.method='mds+dbscan')$data)+
geom_point(aes(DimI,DimII))
geneUsageAnalysis(trbv,.method='mds+dbscan')$data %>% as.data.frame()
ggplot(geneUsageAnalysis(trbv,.method='mds+dbscan')$data %>% as.data.frame())+
geom_point(aes(DimI,DimII))
geneUsageAnalysis(trbv,.method='mds+dbscan')$data %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+
geom_point()
geneUsageAnalysis(trbv,.method='mds+dbscan')$data %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,labels=rownames))+geom_point()+
ggrepel::geom_text_repel()
geneUsageAnalysis(trbv,.method='mds+dbscan')$data %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rownames))+geom_point()+
ggrepel::geom_text_repel()
?ggrepel::geom_text_repel
geneUsageAnalysis(trbv,.method='mds+dbscan')$data %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname))+geom_point()+
ggrepel::geom_text_repel()
names(rep$data)
names(rep$data) %>% str_replace('.*-h$','h')
names(rep$data) %>% if_else(str_ends('h'),'h',if_else(str_ends('l'),'til','pbmc'))
if_else(str_ends(names(rep$data),'h'),'h',if_else(names(rep$data),str_ends('l'),'til','pbmc'))
rep$meta
rep$meta$patient
rep$meta
str_replace(rep$meta$timepoint,'1|3|5','pbmc')
rep$meta %<>% mutate(coarse=str_replace(timepoint,'1|3|5','pbmc'))
geneUsageAnalysis(trbv,.method='mds+dbscan')$data %>%
as.data.frame() %>% rownames_to_column()
geneUsageAnalysis(trbv,.method='mds+dbscan')$data %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$coarse))+geom_point()+
ggrepel::geom_text_repel()
geneUsageAnalysis(trbv,.method='pca+hclust')
geneUsageAnalysis(trbv,.method='tsne') %>% vis()
geneUsageAnalysis(trbv,.method='tsne')
geneUsageAnalysis(trbv,.method='tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$coarse))+geom_point()+
ggrepel::geom_text_repel()
geneUsageAnalysis(trbv,.method='tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$patient))+geom_point()+
ggrepel::geom_text_repel()
geneUsageAnalysis(trbv,.method='mds') %>% vis()
geneUsageAnalysis(trbv,.method='js') %>% vis()
?vis_heatmap
?geneUsageAnalysis
?vis
geneUsageAnalysis(trbv,.method='js') %>% vis(.plot='heatmap2')
geneUsageAnalysis(trbv,.method='js')
geneUsageAnalysis(trbv,.method='js') %>% class()
geneUsageAnalysis(trbv,.method='js') %>% pheatmap::pheatmap()
geneUsageAnalysis(trbv,.method='js') %>% rownames()
geneUsageAnalysis(trbv,.method='js')[1:73,1:73] %>% pheatmap::pheatmap()
geneUsageAnalysis(trbv,.method='js')[1:73,1:73]
geneUsageAnalysis(trbv,.method='js') %>% as.matrix()
geneUsageAnalysis(trbv,.method='js') %>% as.matrix() %>% rownames()
geneUsageAnalysis(trbv,.method='js')[20:82,20:82] %>% pheatmap::pheatmap()
geneUsageAnalysis(trbv,.method='js')[c(20:32,35:48,50:51,53:82),c(20:32,35:48,50:51,53:82)] %>% pheatmap::pheatmap()
jc <- repOverlap(rep$data,'jaccard')
mor <- repOverlap(rep$data,'morisita')
repOverlapAnalysis(jc,'hclust')
?repOverlapAnalysis
repOverlapAnalysis(jc)
repOverlapAnalysis(jc,'mds')
repOverlapAnalysis(jc,'tsne')
repOverlapAnalysis(jc,'tsne') %>% vis()
repOverlapAnalysis(jc,'pca') %>% vis()
repOverlapAnalysis(jc,'tsne')
repOverlapAnalysis(jc,'tsne') %>% as.data.frame() %>%
ggplot(aes(DimI,DimII))
repOverlapAnalysis(jc,'tsne') %>% as.data.frame() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII))+geom_point()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$patient))+geom_point()+
ggrepel::geom_text_repel()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$patient))+geom_point()+
ggrepel::geom_text_repel()
repOverlapAnalysis(jc,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$coarse))+geom_point()+
ggrepel::geom_text_repel()
repOverlapAnalysis(mor,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$coarse))+geom_point()+
ggrepel::geom_text_repel()
repOverlapAnalysis(mor,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$patient))+geom_point()+
ggrepel::geom_text_repel()
repOverlapAnalysis(mor,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$lynch))+geom_point()+
ggrepel::geom_text_repel()
repOverlapAnalysis(mor,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$lynch))+geom_point()+
ggrepel::geom_text_repel()
repOverlapAnalysis(mor,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$lynch))+geom_point()+
ggrepel::geom_text_repel()
repOverlapAnalysis(mor,'tsne') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$lynch))+geom_point()+
ggrepel::geom_text_repel()
repOverlapAnalysis(mor,'tsne+kmeans') %>%
as.data.frame() %>% rownames_to_column() %>%
ggplot(aes(DimI,DimII,label=rowname,color=rep$meta$lynch))+geom_point()+
ggrepel::geom_text_repel()
repOverlapAnalysis(mor,'tsne+kmeans')
repOverlapAnalysis(mor,'tsne+kmeans') %>% vis()
repOverlapAnalysis(mor,'tsne+kmeans') %>% vis()
repOverlapAnalysis(mor,'tsne+kmeans',.k=9) %>% vis()
vdj <- data.table::fread('data_rep/vdjdb_single.tsv')
vdj
vdj %>% names()
vdj %>% str()
vdj %>% names()
vdj$complex.id
vdj$Gene
vdj$CDR3
vdj$V
vdj$V %>% str_ends('\\*01')
vdj$V %>% str_ends('\\*01') %>% all()
vdj$V %>% str_ends('\\*01') %>% mean()
vdj$V %>% str_ends('\\*01',negate=T)
vdj$V[vdj$V %>% str_ends('\\*01',negate=T)]
vdj$J
vdj$J[vdj$J %>% str_ends('\\*01',negate=T)]
vdj$Species
vdj$`MHC A`
vdj$`MHC class`
vdj$Epitope
vdj$`Epitope gene`
vdj$`Epitope species`
vdj$Reference
vdj$Method
vdj$Meta
vdj$CDR3fix
vdj$Score
# kmers
k5 <- getKmers(rep$data,5)
k5
26^5
vis(k5,.head=30,.position='stack')
vis(k5,.head=30,.position='fill')
kmer_profile(k5,.method='freq')
k5 %>% class()
k5
kmer_profile(k5[[1]],.method='freq')
kmer_profile(k5[[1]],.method='freq') %>% vis()
kmer_profile(k5[[1]],.method='freq',.plot='seq') %>% vis()
kmer_profile(k5[[1]],.method='freq') %>% vis(.plot='seq')
