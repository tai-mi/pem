V.end=NA,
D.start=NA,
D.end=NA,
J.start=NA,
VJ.ins=NA,
VD.ins=NA,
DJ.ins=NA,
Sequence=NA,.after=6) %>%
mutate(Proportion=Clones/nTot,.after=1) %>%
arrange(desc(Clones))
}
# tracks clonotypes across pbmc and til timepoints
trackCl2 <- function(p,...){
require(immunarch)
p <- as.character(p)
temp <- filter(dat@contig_tbl,patient==p) %>%
group_split(timepoint) %>%
map(~toImmunarch(.x))
temp %<>% set_names(filter(dat@contig_tbl,patient==p) %>%
group_by(timepoint) %>% group_keys() %>% unlist())
if(p %in% names(rep1$data)) temp$til <- rep1$data[[p]]
trackClonotypes(temp,...)
}
dat2 <- dat@contig_tbl %>% group_split(patient,timepoint) %>%
map(~toImmunarch(.x))
dat2
names(dat2) <- group_by(dat@contig_tbl,patient,timepoint) %>%
group_keys() %>% unlist()
length(dat2)
group_by(dat@contig_tbl,patient,timepoint) %>%
group_keys() %>% unlist() %>% length()
group_by(dat@contig_tbl,patient,timepoint) %>%
group_keys() %>% unlist()
map(dat2,function(x){
c(x$patient[1],x$timepoint[1])
})
h1 <- map(dat2,function(x){
c(x$patient[1],x$timepoint[1])
})
h1 %>% duplicated() %>% any()
h1 %>% as.data.frame.list()
h1 %>% as.data.frame.list() %>% view()
h1 %>% as.data.frame.list() %>% t()
h1 %>% as.data.frame.list() %>% t() %>% colnames()
h1 %>% as.data.frame.list() %>% t() %>% set_colnames(c('p','t'))
h1 %>% as.data.frame.list() %>% t() %>% set_colnames(c('p','t')) %>% arrange(p,t)
h1 %>% as.data.frame.list() %>% t() %>% set_colnames(c('p','t')) %>% as.data.frame() %>% arrange(p,t)
h1 %>% as.data.frame.list() %>% t() %>% set_colnames(c('p','t')) %>% as.data.frame() %>% arrange(p,t) %>% view()
h1 %>% as.data.frame.list() %>% t() %>% set_colnames(c('p','t')) %>% as.data.frame() %>% mutate(p=as.numeric(p)) %>% arrange(p,t) %>% view()
apply(dat2,1,print)
dat2
apply(h1,1,print)
h1
map(h1,~paste(.x,collapse='-'))
map(h1,~paste(.x,collapse='-')) %>% unlist()
names(dat2) <- map(dat2, function(x){
h1 <- c(x$patient[1],x$timepoint[1])
map(h1,~paste(.x,collapse='-')) %>% unlist()
})
dat2
map(h1,~paste(.x,collapse='-')) %>% unlist()
map(h1,~paste(.x,collapse='-')) %>% unlist() %>% class()
names(dat2) <- map(dat2, function(x) c(x$patient[1],x$timepoint[1]) %>%
map(~paste(.x,collapse='-')) %>% unlist())
dat2
names(dat2) <- map(dat2, function(x) c(x$patient[1],x$timepoint[1])) %>%
map(~paste(.x,collapse='-')) %>% unlist()
dat2
rep1
names(rep1$data)
names(rep1$data) %>% paste0('-til')
names(rep1$data) %<>% paste0('-til')
rep1
metaOrig <- rep1$meta
c(rep1$data,dat2)
rep2 <- c(rep1,dat2)
rep2 <- c(rep1$data,dat2)
class(rep1)
length(rep1)
names(rep1)
names(rep2)
names(rep2) %>% str_split('-')
names(rep2) %>% str_split('-') %>% as.data.frame()
names(rep2) %>% str_split('-') %>% as.data.frame() %>% t()
names(rep2) %>% str_split('-') %>% as.data.frame() %>% t() %>% as.data.frame()
names(rep2) %>% str_split('-') %>% as.data.frame() %>% t() %>% as.data.frame()
metaOrig
cl <- readRDS('data_misc/clinical.rds')
rep2 %>% names()
cl
names(rep2) %>% str_split('-') %>% as.data.frame() %>% t() %>%
as.data.frame() %>% set_colnames(c('patient','timepoint')) %>%
left_join(cl,by=c('patient'='sample')) %>% select(-sample)
names(rep2) %>% str_split('-') %>% as.data.frame() %>% t() %>%
as.data.frame() %>% set_colnames(c('patient','timepoint')) %>%
mutate(patient=as.numeric(patient)) %>%
left_join(cl,by=c('patient'='sample')) %>% select(-sample)
names(rep2) %>% str_split('-') %>% as.data.frame() %>% t() %>%
as.data.frame() %>% set_colnames(c('patient','timepoint')) %>%
mutate(patient=as.numeric(patient))
cl
names(rep2) %>% str_split('-') %>% as.data.frame() %>% t() %>%
as.data.frame() %>% set_colnames(c('patient','timepoint')) %>%
mutate(patient=as.numeric(patient)) %>%
left_join(cl,by=c('patient'='sample'))
meta2 <- names(rep2) %>% str_split('-') %>% as.data.frame() %>% t() %>%
as.data.frame() %>% set_colnames(c('patient','timepoint')) %>%
mutate(patient=as.numeric(patient)) %>%
left_join(cl,by=c('patient'='sample'))
rep2 <- list(meta2,rep2)
rep2
rep2 %>% map(length)
rep2 <- c(rep1$data,dat2)
meta2 <- names(rep2) %>% str_split('-') %>% as.data.frame() %>% t() %>%
as.data.frame() %>% set_colnames(c('patient','timepoint')) %>%
mutate(patient=as.numeric(patient)) %>%
left_join(cl,by=c('patient'='sample'))
rep2 <- list(meta2,rep2) %>% set_names(c('meta','data'))
rep2 %>% length()
rep2 %>% map(length)
saveRDS(rep2,'data_misc/rep2.rds')
object.size(rep2)
?trackClonotypes
library(magrittr)
library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep1 <- readRDS('data_misc/rep1.rds')
dat <- readRDS('data_misc/dat.rds')
# takes df (already filtered to one set to analyze)
toImmunarch <- function(df){
nTot <- nrow(df)
df <- add_count(df,cdr3)
df[!duplicated(df$cdr3),] %>% select(
Clones=n,
CDR3.nt=cdr3_nt,
CDR3.aa=cdr3,
V.name=v_gene,
D.name=d_gene,
J.name=j_gene,
patient,
timepoint
) %>% mutate(
V.end=NA,
D.start=NA,
D.end=NA,
J.start=NA,
VJ.ins=NA,
VD.ins=NA,
DJ.ins=NA,
Sequence=NA,.after=6) %>%
mutate(Proportion=Clones/nTot,.after=1) %>%
arrange(desc(Clones))
}
# tracks clonotypes across pbmc and til timepoints
trackCl2 <- function(p,...){
require(immunarch)
p <- as.character(p)
temp <- filter(dat@contig_tbl,patient==p) %>%
group_split(timepoint) %>%
map(~toImmunarch(.x))
temp %<>% set_names(filter(dat@contig_tbl,patient==p) %>%
group_by(timepoint) %>% group_keys() %>% unlist())
if(p %in% names(rep1$data)) temp$til <- rep1$data[[p]]
trackClonotypes(temp,...)
}
library(magrittr)
library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep2 <- readRDS('data_misc/rep2.rds')
rep2$data
rep2$data[rep2$meta$patient==9]
rep2$data$`9-5`
rep2$data$`9-5`$D.name
rep2$data$`9-5`$D.name %>% head()
rep2$data$`9-5`$D.name[1]
rep2$data$`9-5`$D.name[1] %>% class()
rep2$data$`9-5`$D.name[1] %>% length()
rep2$data$`9-5`$D.name[1] %>% substr(1,1)
rep2$data[rep2$meta$patient==9]
names(rep2$data$`9-5`)
rep2$data <- map(function(x){
x$V.name[x$V.name=='None'] <- NA
x$D.name[x$D.name=='None'] <- NA
x$J.name[x$J.name=='None'] <- NA
x
})
rep2$data %<>% map(function(x){
x$V.name[x$V.name=='None'] <- NA
x$D.name[x$D.name=='None'] <- NA
x$J.name[x$J.name=='None'] <- NA
x
})
rep2$data$`9-5`
saveRDS(rep2,'data_misc/rep2.rds')
exists('rep1$data')
c(2,3) %in% c(2,3,4)
paste0(c(2,3),'-')
if(c(T,T)) print(5)
rep2$data$`9-1`
rep2$data$`9-1`$patient
rep2$data$`9-1`$Sequence
full_join(rep2$data$`9-til`,rep2$data$`9-1`,by=c('CDR3.aa'),suffix=c('.til','.1'))
h1 <- full_join(rep2$data$`9-til`,rep2$data$`9-1`,by=c('CDR3.aa'),suffix=c('.til','.1'))
h1$Clones.1
h1$Clones.til
?try
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1'))
ggplot(joined,aes(Clones.til,Clones.1))+
geom_jitter()
}
til1('9')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1'))
ggplot(joined,aes(Clones.til,Clones.1))+
geom_jitter()+
scale_x_log10()+scale_y_log10()
}
til1('9')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1')) %>%
filter(Clones.til!=0)
ggplot(joined,aes(Clones.til,Clones.1))+
geom_jitter()+
scale_x_log10()+scale_y_log10()
}
til1('9')
h1$Clones.til %>% table()
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1')) %>%
filter(Clones.til>1)
ggplot(joined,aes(Clones.til,Clones.1))+
geom_jitter()+
scale_x_log10()+scale_y_log10()
}
til1('9')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1')) %>%
filter(Clones.til>0)
ggplot(joined,aes(Clones.til,Clones.1))+
geom_jitter()+
scale_x_log10()+scale_y_log10()
}
til1('1')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1')) %>%
filter(Clones.til>0)
ggplot(joined,aes(Clones.til,Clones.1))+
geom_jitter(width=0.1,height=0.1)+
scale_x_log10()+scale_y_log10()
}
til1('1')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1')) %>%
filter(Clones.til>0)
ggplot(joined,aes(Clones.til,Clones.1))+
geom_jitter(width=0.05,height=0.05)+
scale_x_log10()+scale_y_log10()
}
til1('1')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1')) %>%
filter(Clones.til>0)
ggplot(joined,aes(Clones.til,Clones.1))+
geom_jitter(width=0.075,height=0.075)+
scale_x_log10()+scale_y_log10()
}
til1('2')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1'))
joined$Clones.til[is.na(joined$Clones.til)] <- 0
joined$Clones.1[is.na(joined$Clones.1)] <- 0
ggplot(joined,aes(Clones.til,Clones.1))+
geom_jitter(width=0.075,height=0.075)+
scale_x_log10()+scale_y_log10()
}
til1('2')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1'))
joined$Clones.til[is.na(joined$Clones.til)] <- 0
joined$Clones.1[is.na(joined$Clones.1)] <- 0
ggplot(joined,aes(Clones.til,Clones.1))+
geom_jitter(width=0.075,height=0.075)
}
til1('2')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1'))
joined$Proportion.til[is.na(joined$Proportion.til)] <- 0
joined$Proportion.1[is.na(joined$Proportion.1)] <- 0
ggplot(joined,aes(Proportion.til,Proportion.1))+
geom_jitter(width=0.075,height=0.075)
}
til1('2')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1'))
joined$Proportion.til[is.na(joined$Proportion.til)] <- 0
joined$Proportion.1[is.na(joined$Proportion.1)] <- 0
ggplot(joined,aes(Proportion.til,Proportion.1))+
geom_jitter()
}
til1('2')
til1 <- function(p){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-til')]],
rep2$data[[paste0(p,'-1')]],
by=c('CDR3.aa'),suffix=c('.til','.1'))
joined$Proportion.til[is.na(joined$Proportion.til)] <- 0
joined$Proportion.1[is.na(joined$Proportion.1)] <- 0
ggplot(joined,aes(Proportion.til,Proportion.1))+
geom_jitter()+
scale_x_log10()+scale_y_log10()
}
til1('2')
til(2,'til',1)
til1 <- function(p,x,y){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-',x)]],
rep2$data[[paste0(p,'-',y)]],
by=c('CDR3.aa'))
joined$Proportion.x[is.na(joined$Proportion.x)] <- 0
joined$Proportion.y[is.na(joined$Proportion.y)] <- 0
ggplot(joined,aes(Proportion.x,Proportion.y))+
geom_jitter()+
scale_x_log10()+scale_y_log10()
}
til1(2,'til',1)
til1(2,1,5)
propComp <- function(p,x,y){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-',x)]],
rep2$data[[paste0(p,'-',y)]],
by=c('CDR3.aa'))
joined$Proportion.x[is.na(joined$Proportion.x)] <- 0
joined$Proportion.y[is.na(joined$Proportion.y)] <- 0
ggplot(joined,aes(Proportion.x,Proportion.y))+
geom_jitter()+
scale_x_log10()+scale_y_log10()
}
propComp(2,1,5)
propComp(5,1,5)
propComp(6,1,5)
propComp(8,1,5)
propComp(10,1,5)
propComp(11,1,5)
propComp(12,1,5)
propComp(13,1,5)
propComp(14,1,5)
propComp(15,1,5)
map(1:24,~print(propComp(.x,1,5)))
map(1:4,~print(propComp(.x,1,5)))
map(1:2,~print(propComp(.x,1,5)))
map(2:4,~print(propComp(.x,1,5)))
for(i in 1:24){
propComp(i,1,5)
}
for(i in 1:24){
try(propComp(i,1,5))
}
for(i in 1:24){
try(propComp(i,1,5),T)
}
propComp <- function(p,x,y){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-',x)]],
rep2$data[[paste0(p,'-',y)]],
by=c('CDR3.aa'))
joined$Proportion.x[is.na(joined$Proportion.x)] <- 0
joined$Proportion.y[is.na(joined$Proportion.y)] <- 0
ggplot(joined,aes(Proportion.x,Proportion.y))+
geom_jitter()+scale_x_log10()+scale_y_log10()+
labs(title=paste(p,'-',x,'vs',y))
}
for(i in 1:24){
try(print(propComp(i,1,5)),T)
ggsave(paste0('pxy/',i,'.png'))
}
propComp(1,1,5)
propComp(1,til,1)
til <- 'til'
propComp(1,til,1)
propComp <- function(p,x,y){
# will error if patient is missing til or t1 data
joined <- full_join(rep2$data[[paste0(p,'-',x)]],
rep2$data[[paste0(p,'-',y)]],
by=c('CDR3.aa'))
joined$Proportion.x[is.na(joined$Proportion.x)] <- 0
# joined$Proportion.y[is.na(joined$Proportion.y)] <- 0
ggplot(joined,aes(Proportion.x,Proportion.y))+
geom_jitter()+scale_x_log10()+scale_y_log10()+
labs(title=paste(p,'-',x,'vs',y))
}
propComp(1,til,1)
propComp(5,til,1)
for(i in 1:24){
try(print(propComp(i,til,1)),T)
ggsave(paste0('ptil1/',i,'.png'))
}
propComp <- function(p,x,y){
# will error if patient is missing required data
joined <- full_join(rep2$data[[paste0(p,'-',x)]],
rep2$data[[paste0(p,'-',y)]],
by=c('CDR3.aa'))
# joined$Proportion.x[is.na(joined$Proportion.x)] <- 0
joined$Proportion.y[is.na(joined$Proportion.y)] <- 0
ggplot(joined,aes(Proportion.x,Proportion.y))+
geom_jitter()+scale_x_log10()+scale_y_log10()+
labs(title=paste(p,'-',x,'vs',y))
}
for(i in 1:24){
try(print(propComp(i,til,1)),T)
ggsave(paste0('ptil1/',i,'.png'))
}
library(Seurat)
?ScaleData
library(magrittr)
library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep1 <- readRDS('data_misc/rep1.rds')
dat <- readRDS('data_misc/dat.rds')
# takes df (already filtered to one set to analyze)
toImmunarch <- function(df){
nTot <- nrow(df)
df <- add_count(df,cdr3)
df[!duplicated(df$cdr3),] %>% select(
library(magrittr)
library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep2 <- readRDS('data_misc/rep2.rds')
propComp <- function(p,x,y){
# will error if patient is missing required data
joined <- full_join(rep2$data[[paste0(p,'-',x)]],
rep2$data[[paste0(p,'-',y)]],
by=c('CDR3.aa'))
# joined$Proportion.x[is.na(joined$Proportion.x)] <- 0
joined$Proportion.y[is.na(joined$Proportion.y)] <- 0
ggplot(joined,aes(Proportion.x,Proportion.y))+
geom_jitter()+scale_x_log10()+scale_y_log10()+
labs(title=paste(p,'-',x,'vs',y))
}
rna <- readRDS('data_sc/scaled_rna2.rds')
dim(rna)
colnames(rna)
rna %>% head() %>% view()
?repOverlap()
repOverlap(rep2$data[rep2$meta$patient==1],'overlap')
repOverlap(rep2$data[rep2$meta$patient==2],'overlap')
repOverlap(rep2$data[rep2$meta$patient==3],'overlap')
repOverlap(rep2$data[rep2$meta$patient==4],'overlap')
repOverlap(rep2$data[rep2$meta$patient==5],'overlap')
repOverlap(rep2$data[rep2$meta$patient==7],'overlap')
repOverlap(rep2$data[rep2$meta$patient==14],'overlap')
repOverlap(rep2$data[rep2$meta$patient==18],'overlap')
repOverlap(rep2$data[rep2$meta$patient==18],'public')
repOverlap(rep2$data[rep2$meta$patient==18],'jaccard')
view(rna)
view(head(rna,100))
rownames(rna)
sct <- readRDS('data_sc/scaled_sct2.rds')
dim(sct)
r1 <- readRDS('rr.rds')
s1 <- readRDS('rs.rds')
rna %>% head()
rownames(rna) <- r1
rna %>% head()
rna %<>% as.data.frame()
rna %>% head()
sct %<>% as.data.frame() %>% set_rownames(s1)
sct %>% head()
saveRDS(sct,'data_sc/scaled_sct2.rds')
saveRDS(rna,'data_sc/scaled_rna2.rds')
library(magrittr)
library(tidyverse)
