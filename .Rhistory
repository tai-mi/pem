data.frame('temp'=.) %>%
separate(temp,c('primary','secondary'),'-') %>%
filter(primary!='Dead') %>%
mutate(secondary=case_when(secondary==''~'None',secondary=='Dead'~'None',T~secondary))
h1 <- table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',primary),
primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
h1 <- add_clinical(cella@contig_tbl) %>% #filter(clinical=='Nonlynch-like responder') %>%
group_split(patient,timepoint,chain,cdr3)
h1 <- h1[map_dbl(h1,~nrow(.x))>=nfilter]
h1 <- map_chr(h1,function(x){
y <- na.omit(x$cluster_coarse) %>% as.character()
if(length(y)<nfilter) NA_character_
else{
table1 <- table(y)
if(length(table1)==1){
sample(names(which(table1==max(table1))),1) %>%
paste0('-')
} else{
primary <- sample(names(which(table1==max(table1))),1)
table1 <- table(y,exclude=primary)
secondary <- sample(names(which(table1==max(table1))),1)
paste0(primary,'-',secondary)
}
}
}) %>% na.omit() %>%
data.frame('temp'=.) %>%
separate(temp,c('primary','secondary'),'-') %>%
filter(primary!='Dead') %>%
mutate(secondary=case_when(secondary==''~'None',secondary=='Dead'~'None',T~secondary))
h1 <- table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',primary),
primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
h1 <- table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
# mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',primary),
#        primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
h1 <- table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',primary),
primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
h1 <- table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',primary),
primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
h1
# cell types of clonotypes
#' need to do cella, and then group patient-time-cdr3
#' ID most freq cell type
#' ID second most freq but just do this for top clones
nfilter <- 3
h1 <- add_clinical(cella@contig_tbl) %>% #filter(clinical=='Nonlynch-like responder') %>%
group_split(patient,timepoint,chain,cdr3)
h1 <- h1[map_dbl(h1,~nrow(.x))>=nfilter]
h1 <- map_chr(h1,function(x){
y <- na.omit(x$cluster_coarse) %>% as.character()
if(length(y)<nfilter) NA_character_
else{
table1 <- table(y)
if(length(table1)==1){
sample(names(which(table1==max(table1))),1) %>%
paste0('-')
} else{
primary <- sample(names(which(table1==max(table1))),1)
table1 <- table(y,exclude=primary)
secondary <- sample(names(which(table1==max(table1))),1)
paste0(primary,'-',secondary)
}
}
}) %>% na.omit() %>%
data.frame('temp'=.) %>%
separate(temp,c('primary','secondary'),'-') %>%
filter(primary!='Dead') %>%
mutate(secondary=case_when(secondary==''~'None',secondary=='Dead'~'None',T~secondary))
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',primary),
primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',primary),
primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
ggplot(aes(primary2,value,fill=secondary2))+geom_col(position='stack')
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name)
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',primary),
primary2=if_else(primary=='CD8 Naive',secondary,primary))
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',secondary),
primary2=if_else(primary=='CD8 Naive',secondary,primary))
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',secondary),
primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
ggplot(aes(primary2,value,fill=secondary2))+geom_col(position='stack')
table(h1) %>% t() %>% as.data.frame.matrix()
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
# mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',secondary),
#        primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
filter(primary!='CD8 Naive') %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
h1 <- add_clinical(cella@contig_tbl) %>% filter(clinical=='Nonlynch-like responder') %>%
group_split(patient,timepoint,chain,cdr3)
h1 <- h1[map_dbl(h1,~nrow(.x))>=nfilter]
h1 <- map_chr(h1,function(x){
y <- na.omit(x$cluster_coarse) %>% as.character()
if(length(y)<nfilter) NA_character_
else{
table1 <- table(y)
if(length(table1)==1){
sample(names(which(table1==max(table1))),1) %>%
paste0('-')
} else{
primary <- sample(names(which(table1==max(table1))),1)
table1 <- table(y,exclude=primary)
secondary <- sample(names(which(table1==max(table1))),1)
paste0(primary,'-',secondary)
}
}
}) %>% na.omit() %>%
data.frame('temp'=.) %>%
separate(temp,c('primary','secondary'),'-') %>%
filter(primary!='Dead') %>%
mutate(secondary=case_when(secondary==''~'None',secondary=='Dead'~'None',T~secondary))
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
# mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',secondary),
#        primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
filter(primary!='CD8 Naive') %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
h1 <- add_clinical(cella@contig_tbl) %>% filter(clinical=='Lynch-like responder') %>%
group_split(patient,timepoint,chain,cdr3)
h1 <- h1[map_dbl(h1,~nrow(.x))>=nfilter]
h1 <- map_chr(h1,function(x){
y <- na.omit(x$cluster_coarse) %>% as.character()
if(length(y)<nfilter) NA_character_
else{
table1 <- table(y)
if(length(table1)==1){
sample(names(which(table1==max(table1))),1) %>%
paste0('-')
} else{
primary <- sample(names(which(table1==max(table1))),1)
table1 <- table(y,exclude=primary)
secondary <- sample(names(which(table1==max(table1))),1)
paste0(primary,'-',secondary)
}
}
}) %>% na.omit() %>%
data.frame('temp'=.) %>%
separate(temp,c('primary','secondary'),'-') %>%
filter(primary!='Dead') %>%
mutate(secondary=case_when(secondary==''~'None',secondary=='Dead'~'None',T~secondary))
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
# mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',secondary),
#        primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
filter(primary!='CD8 Naive') %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
h1 <- add_clinical(cella@contig_tbl) %>% filter(clinical=='Nonresponder') %>%
group_split(patient,timepoint,chain,cdr3)
h1 <- h1[map_dbl(h1,~nrow(.x))>=nfilter]
h1 <- map_chr(h1,function(x){
y <- na.omit(x$cluster_coarse) %>% as.character()
if(length(y)<nfilter) NA_character_
else{
table1 <- table(y)
if(length(table1)==1){
sample(names(which(table1==max(table1))),1) %>%
paste0('-')
} else{
primary <- sample(names(which(table1==max(table1))),1)
table1 <- table(y,exclude=primary)
secondary <- sample(names(which(table1==max(table1))),1)
paste0(primary,'-',secondary)
}
}
}) %>% na.omit() %>%
data.frame('temp'=.) %>%
separate(temp,c('primary','secondary'),'-') %>%
filter(primary!='Dead') %>%
mutate(secondary=case_when(secondary==''~'None',secondary=='Dead'~'None',T~secondary))
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
# mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',secondary),
#        primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
filter(primary!='CD8 Naive') %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
# cd8 cd4 stuff
h1 <- group_by(dat,patient,timepoint,clinical) %>%
summarize(cd8=mean(str_starts(cluster_coarse,'CD8')),
cd4=mean(str_starts(cluster_coarse,'CD8',negate=T)))
ggplot(h1,aes(clinical,cd8,fill=clinical))+
geom_boxplot(outlier.alpha=0)+
geom_jitter(aes(shape=timepoint),width=0.05,height=0)
ggplot(h1,aes(clinical,cd8/cd4,fill=clinical))+
geom_boxplot(outlier.alpha=0)+
geom_jitter(aes(shape=timepoint),width=0.05,height=0)+
scale_y_log10()
# cd8 cd4 stuff
h1 <- group_by(dat,patient,timepoint,clinical) %>%
summarize(cd8=mean(str_starts(cluster_coarse,'CD8')),
cd4=mean(str_starts(cluster_coarse,'CD8',negate=T)))
ggplot(h1,aes(clinical,cd8,fill=clinical))+
geom_boxplot(outlier.alpha=0)+
geom_jitter(aes(shape=timepoint),width=0.05,height=0)
ggplot(filter(h1,timepoint!=''),aes(timepoint,cd8/cd4,fill=timepoint))+
geom_boxplot(outlier.alpha=0)+
geom_jitter(width=0.05,height=0)+
scale_y_log10()
ggplot(h1,aes(clinical,cd8/cd4,fill=clinical))+
geom_boxplot(outlier.alpha=0)+
geom_jitter(aes(shape=timepoint),width=0.05,height=0)+
scale_y_log10()
dat
h1 <- filter(dat,cluster_coarse!='Dead')
table(h1$cluster_coarse,h1$clinical)
table(h1$cluster_coarse,h1$clinical) %>% as.data.frame.matrix() %>% mutate(across(.fns=proportions))
h1 <- add_clinical(cella@contig_tbl) %>% filter(clinical=='Healthy') %>%
group_split(patient,timepoint,chain,cdr3)
h1 <- h1[map_dbl(h1,~nrow(.x))>=nfilter]
h1 <- map_chr(h1,function(x){
y <- na.omit(x$cluster_coarse) %>% as.character()
if(length(y)<nfilter) NA_character_
else{
table1 <- table(y)
if(length(table1)==1){
sample(names(which(table1==max(table1))),1) %>%
paste0('-')
} else{
primary <- sample(names(which(table1==max(table1))),1)
table1 <- table(y,exclude=primary)
secondary <- sample(names(which(table1==max(table1))),1)
paste0(primary,'-',secondary)
}
}
}) %>% na.omit() %>%
data.frame('temp'=.) %>%
separate(temp,c('primary','secondary'),'-') %>%
filter(primary!='Dead') %>%
mutate(secondary=case_when(secondary==''~'None',secondary=='Dead'~'None',T~secondary))
table(h1) %>% t() %>% as.data.frame.matrix() %>%
mutate(across(.fns=proportions)) %>%
rownames_to_column('secondary') %>% pivot_longer(-secondary) %>%
rename(primary=name) %>%
# this is to replace the ones with cd8 naive as primary
# mutate(secondary2=if_else(primary=='CD8 Naive','CD8 Naive',secondary),
#        primary2=if_else(primary=='CD8 Naive',secondary,primary)) %>%
filter(primary!='CD8 Naive') %>%
ggplot(aes(primary,value,fill=secondary))+geom_col(position='stack')
add_clinical(cella@contig_tbl)
add_clinical(cella@contig_tbl) %>% .$clinical
add_clinical(cella@contig_tbl) %>% .$clinical %>% unique()
# overall overlap
repOverlap(rep3$data,'overlap') %>% vis('heatmap2')
?vis
source('~/.active-rstudio-document', echo=TRUE)
library(magrittr)
library(CellaRepertorium)
library(immunarch)
library(tidyverse)
rep3 <- readRDS('data_misc/rep3.rds')
cella <- readRDS('data_misc/cella3.rds')
cl <- readRDS('data_misc/clinical.rds')
dat <- readRDS('data_sc/meta_tdat.rds') %>%
mutate(patient=case_when(
str_starts(orig.ident,'P')~str_extract(orig.ident,'(?<=PEM)\\d+'),
T~orig.ident))
?vis
repOverlap(rep3$data,'overlap')
names(rep3$data)
rep3$meta$clinical
rep3$meta$clinical %>% set_names(names(rep3$data))
# repoverlap all tcr
repOverlap(rep3$data,'overlap') %>%
vis('heatmap2',annotation_col=rep3$meta$clinical %>% set_names(names(rep3$data)))
# repoverlap all tcr
repOverlap(rep3$data,'overlap') %>%
vis('heatmap2',annotation_col=rep3$meta$clinical %>% set_names(names(rep3$data)),scale='row')
# repoverlap all tcr
repOverlap(rep3$data,'overlap') %>%
vis('heatmap2',annotation_col=rep3$meta$clinical %>% set_names(names(rep3$data)) %>% as.data.frame())
rep3$meta$clinical %>% set_names(names(rep3$data)) %>% as.data.frame()
rep3$meta$clinical %>% set_names(names(rep3$data)) %>% as.data.frame() %>% class()
rep3$meta$clinical %>% set_names(names(rep3$data)) %>% as.data.frame() %>% dim()
data.frame(factor(rep3$meta$clinical),row.names=names(rep3$data))
# repoverlap all tcr
repOverlap(rep3$data,'overlap') %>%
vis('heatmap2',annotation_col=data.frame(factor(rep3$meta$clinical),row.names=names(rep3$data)))
names(rep3$data)
# repoverlap all tcr
repOverlap(rep3$data,'overlap') %>%
vis('heatmap2',annotation_row=data.frame(factor(rep3$meta$clinical),row.names=names(rep3$data)))
# repoverlap all tcr
repOverlap(rep3$data,'overlap') %>%
pheatmap::pheatmap()
# repoverlap all tcr
repOverlap(rep3$data,'overlap') %>%
pheatmap::pheatmap(annotation_row=data.frame(factor(rep3$meta$clinical),row.names=names(rep3$data)))
# repoverlap all tcr
repOverlap(rep3$data,'overlap') %>%
pheatmap::pheatmap(
color=colorRampPalette(c("#67001f","#d6604d","#f7f7f7",
"#4393c3","#053061"))(1024),
annotation_row=data.frame('clinical'=factor(rep3$meta$clinical),
row.names=names(rep3$data)))
# repoverlap all tcr
h1 <- repOverlap(rep3$data,'overlap')
h1
min(h1)
min(h1,na.rm=T)
pheatmap::pheatmap(
h1,
color=colorRampPalette(c("#67001f","#d6604d","#f7f7f7",
"#4393c3","#053061"))(1000),
breaks=c(seq(min(h1,na.rm=T),0.1, length.out=1000),max(h1))
annotation_col=data.frame('clinical'=factor(rep3$meta$clinical),
row.names=names(rep3$data)))
pheatmap::pheatmap(
h1,
color=colorRampPalette(c("#67001f","#d6604d","#f7f7f7",
"#4393c3","#053061"))(1000),
breaks=c(seq(min(h1,na.rm=T),0.1, length.out=1000),max(h1)),
annotation_col=data.frame('clinical'=factor(rep3$meta$clinical),
row.names=names(rep3$data)))
pheatmap::pheatmap(
h1,
color=colorRampPalette(c("#67001f","#d6604d","#f7f7f7",
"#4393c3","#053061"))(1000),
breaks=c(seq(min(h1,na.rm=T),0.1, length.out=1000),max(h1)),
annotation_col=data.frame('clinical'=factor(rep3$meta$clinical),
row.names=names(rep3$data)))
# repoverlap all tcr
h1 <- repOverlap(rep3$data,'overlap')
pheatmap::pheatmap(
h1,
color=colorRampPalette(c("#67001f","#d6604d","#f7f7f7",
"#4393c3","#053061"))(1000),
# breaks=c(seq(min(h1,na.rm=T),0.1, length.out=1000),max(h1)),
annotation_col=data.frame('clinical'=factor(rep3$meta$clinical),
row.names=names(rep3$data)))
# repoverlap all tcr
h1 <- repOverlap(rep3$data,'overlap')
pheatmap::pheatmap(
h1,
color=colorRampPalette(c("#67001f","#d6604d","#f7f7f7",
"#4393c3","#053061"))(1000),
breaks=c(seq(min(h1,na.rm=T),0.1, length.out=1000),max(h1)),
annotation_col=data.frame('clinical'=factor(rep3$meta$clinical),
row.names=names(rep3$data)))
# repoverlap all tcr
h1 <- repOverlap(rep3$data,'overlap')
pheatmap::pheatmap(
h1,
color=colorRampPalette(c("#67001f","#d6604d","#f7f7f7",
"#4393c3","#053061"))(1000),
breaks=c(seq(min(h1,na.rm=T),0.1, length.out=999),max(h1)),
annotation_col=data.frame('clinical'=factor(rep3$meta$clinical),
row.names=names(rep3$data)))
seq(min(h1,na.rm=T),0.1, length.out=998)
c(seq(min(h1,na.rm=T),0.1, length.out=998),max(h1))
pheatmap::pheatmap(
h1,
color=colorRampPalette(c("#67001f","#d6604d","#f7f7f7",
"#4393c3","#053061"))(1000),
breaks=c(seq(min(h1,na.rm=T),0.1, length.out=1001),max(h1,na.rm=T)),
annotation_col=data.frame('clinical'=factor(rep3$meta$clinical),
row.names=names(rep3$data)))
rep3$clinical
rep3$meta$clinical
rep3$meta$clinical %>% unique()
rep3$meta
rep3$meta$patient %>% set_names(rep3$meta$clinical) %>% unique()
rep3$meta$patient %>% set_names(rep3$meta$clinical)
# lazy number of types per clonotype by clinical
add_clinical <- function(df,patient_col='patient'){
p1 <- df[[patient_col]]
df$clinical <- case_when(
p1=='healthy'~'Healthy',
p1 %in% c('14','25','5','2','6','23')~'Lynch-like responder',
p1 %in% c('18','19','22','20','12','11','13')~'Nonlynch-like responder',
p1 %in% c('1','3','7','8','9','10','15','16','17','21','24','26')~'Nonresponder',
stringr::str_starts(p1,'(HD)|(HA)|(eric)')~'Healthy',
T~stop('nonstandard patient value'))
df
}
add_clinical(rep3$meta)
unique(rep3$meta$patient)
p1 <- (rep3$meta$patient)
p1
case_when(
p1=='healthy'~'Healthy',
p1 %in% c('14','25','5','2','6','23')~'Lynch-like responder',
p1 %in% c('18','19','22','20','12','11','13')~'Nonlynch-like responder',
p1 %in% c('1','3','7','8','9','10','15','16','17','21','24','26')~'Nonresponder',
stringr::str_starts(p1,'(HD)|(HA)|(e
case_when(
p1=='healthy'~'Healthy',
p1 %in% c('14','25','5','2','6','23')~'Lynch-like responder',
p1 %in% c('18','19','22','20','12','11','13')~'Nonlynch-like responder',
p1 %in% c('1','3','7','8','9','10','15','16','17','21','24','26')~'Nonresponder',
stringr::str_starts(p1,'(HD)|(HA)|(eric)')~'Healthy',T~NA)
case_when(
p1=='healthy'~'Healthy',
p1 %in% c('14','25','5','2','6','23')~'Lynch-like responder',
p1 %in% c('18','19','22','20','12','11','13')~'Nonlynch-like responder',
p1 %in% c('1','3','7','8','9','10','15','16','17','21','24','26')~'Nonresponder',
stringr::str_starts(p1,'(HD)|(HA)|(eric)')~'Healthy',T~NA_character_)
add_clinical(rep3$meta,'timepoint')
# lazy number of types per clonotype by clinical
add_clinical <- function(df,patient_col='patient'){
p1 <- df[[patient_col]]
df$clinical <- case_when(
p1=='healthy'~'Healthy',
p1 %in% c('14','25','5','2','6','23')~'Lynch-like responder',
p1 %in% c('18','19','22','20','12','11','13')~'Nonlynch-like responder',
p1 %in% c('1','3','7','8','9','10','15','16','17','21','24','26')~'Nonresponder',
stringr::str_starts(p1,'(HD)|(HA)|(eric)')~'Healthy',
T~NA_character_)
if(any(is.na(df$clinical))) warning('invalid patient code')
df
}
# lazy number of types per clonotype by clinical
add_clinical <- function(df,patient_col='patient'){
p1 <- df[[patient_col]]
df$clinical <- case_when(
p1=='healthy'~'Healthy',
p1 %in% c('14','25','5','2','6','23')~'Lynch-like responder',
p1 %in% c('18','19','22','20','12','11','13')~'Nonlynch-like responder',
p1 %in% c('1','3','7','8','9','10','15','16','17','21','24','26')~'Nonresponder',
stringr::str_starts(p1,'(HD)|(HA)|(eric)')~'Healthy',
T~NA_character_)
if(any(is.na(df$clinical))) warning('invalid patient code')
df
}
add_clinical(rep3$meta,'timepoint')
add_clinical(rep3$meta)
add_clinical(rep3$meta) %>% .$clinical) %>% table()
add_clinical(rep3$meta) %>% .$clinical %>% table()
dat$patient
dat$patient %>% unique()
rep3$meta$patient %>% unique()
cella@contig_tbl$patient %>% unique()
dat <- readRDS('data_sc/meta_tdat.rds') %>%
mutate(patient=case_when(
str_starts(orig.ident,'P')~str_extract(orig.ident,'(?<=PEM)\\d+'),
str_starts(orig.ident,'eric')~orig.ident,
orig.ident=='HD1'~'HA5876',orig.ident=='HD2'~'HA5877',
orig.ident=='HD3'~'HA5894',orig.ident=='HD4'~'HA5952',
orig.ident=='HD5'~'HA5953',orig.ident=='HD6'~'HA5957',
T~NA_character_))
any(dat$patient %>% is.na())
rep3$meta$patient %>% unique()
rep3$meta$clinical %>% unique()
add_clinical(rep3$meta)
add_clinical(rep3$meta) %>% .$clinical %>% unique()
rep3$meta <- add_clinical(rep3$meta)
saveRDS(rep3,'data_misc/rep3.rds')
# repoverlap all tcr
pheatmap::pheatmap(
repOverlap(rep3$data,'overlap'),
color=colorRampPalette(c("#67001f","#d6604d","#f7f7f7",
"#4393c3","#053061"))(1000),
breaks=c(seq(min(h1,na.rm=T),0.09, length.out=1001),max(h1,na.rm=T)),
annotation_col=data.frame('clinical'=factor(rep3$meta$clinical),
row.names=names(rep3$data)))
h1 <- c('1','3','7','8','9','10','15','16','17','21','24','26','18','19','22','20','12','11','13','14','25','5','2','6','23')
as.numeric(h1) %>% sort()
any(duplicated(h1))
rep3$meta$timepoint %>% unique()
